Keith,
   We got an error message on DRQA01 from the SQL below.  
   It has to do with a bug with inserting into a table with a materialized view log.  
   Looks like something that might be something that occurs only occasionally rather than consistently. 
   Also looks like we might be able to work around it by just dropping the materialized view log and allowing the full refresh. 
   I've never seen it on Prod, but let me know if you have issues with this consistently and we'll look at either patching or working around it.
 
Mike
 
----- Current SQL Statement for this session (sql_id=c1mx44z4zp0gj) -----

INSERT INTO LX_PAYMENT_CHILD (CLAIM_ID,TRANS_SEQ,DETAIL_SEQ,PS_RUN_ID,PS_TRANS_SEQ,ADD_LINE_NU

M,DEDUCTION_CODE,DEDUCTION_AMOUNT,DEDUCTION_TYPE,PS_RECORD_TYPE,DED_CLASS,DED_PLAN_TYPE,DED_BENE

FIT_PLAN,DED_CODE,DED_SALESTAX_CLASS,DED_CUR,GARN_PRIORITY,GARN_ID,TAX_STATE,TAX_LOCALITY,TAX_CL

ASS,TAX_RESIDENT,TAX_NL_GROSS_CUR,TAX_GROSS_CUR,TAX_CUR,EARN_CODE,EARN_REG,USER_ID,TIME_STAMP,LX

_FLAG) VALUES (:CLAIM_ID,:TRANS_SEQ,:DETAIL_SEQ,:PS_RUN_ID,:PS_TRANS_SEQ,:ADD_LINE_NUM,:DEDUCTIO

N_CODE,:DEDUCTION_AMOUNT,:DEDUCTION_TYPE,:PS_RECORD_TYPE,:DED_CLASS,:DED_PLAN_TYPE,:DED_BENEFIT_

PLAN,:DED_CODE,:DED_SALESTAX_CLASS,:DED_CUR,:GARN_PRIORITY,:GARN_ID,:TAX_STATE,:TAX_LOCALITY,:TA

X_CLASS,:TAX_RESIDENT,:TAX_NL_GROSS_CUR,:TAX_GROSS_CUR,:TAX_CUR,:EARN_CODE,:EARN_REG,:USER_ID,TO

_DATE(:TIME_STAMP,'dd-MON-yy'),:LX_FLAG)



Hi Mike,
Do you mean drop the log, then recreate it after the inserts are complete?



No.  The table LX_PAYMENT_CHILD has a materialized view log created on it.  
     The materialized view log is an internal table (MLOG$_LX_PAYMENT_CHILD) that tracks updates to the LX_PAYMENT_CHILD table. 
     When you insert/update/delete LX_PAYMENT_CHILD, it has internal triggers on in that record the changes in MLOG$_LX_PAYMENT_CHILD. 
     Then, any materialized views that are created on top of LX_PAYMENT_CHILD use the changes recorded in MLOG$_LX_PAYMENT_CHILD to do an incremental
     refresh rather than doing a full refresh from LX_PAYMENT_CHILD.  So it's just a performance thing.  So if you continue to have trouble,
      we can drop the materialized view log which will drop MLOG$_LX_PAYMENT_CHILD and the internal triggers.  That might cost a little more time, 
      but should avoid the error.
 
     The place where you would see the performance difference would be in the refresh of the LX_PAYMENT_CHILD_MV materialized view on DM02.  
 
     It also may be that this is just a very rare occurrence and not worth pursuing.
 


I haven't seen this issue in prod, that I recall and I reload the DRQA01 lx_payment_master almost every month, 
 and I don't recall this issue happening before.  Should I restart my reload (DRQA01) and see what happens?  
  Or do you expect it will occur again?  I start off my truncating lx_payment_child (DRQA01), should I also truncate the MLOG$ for this table?
 
Thanks,



You might want to re-run it on DRQA01 and just make sure it's not happening consistently.  
I can't tell for sure from the bug description, but it sounded like it might not happen regularly.  
You shouldn't need to truncate the mlog$ table.  I believe it will handle that internally.


Looks like it is still failing to load.


Try one more time.  I flushed the shared pool which might get it to go again.  If not, I'll try dropping the mview log.



It failed again.  So I checked the count in the MLOG$, it was much larger than what had loaded, so it seems it was not clearing out when
  I truncated lx_payment_master.  I truncated MLOG$ and it seems to be running ok, so far. 
  The materialized view in DRQA01 is probably not running (scheduled) so MLOG$ is never used and keeps growing.  
  In prod it is used every day so it never gets to a point where it causes a problem.  Just a thought.  I'll keep you posted on the DRQA01 re-load.


Did some looking and found out you do have to tell it if you want the mview log to be truncated with the table.
 
truncate table luminx.lx_payment_child purge materialized view log


****************************Check last MV refresh Date/Time ***********************
Select * from dba_mview_refresh_times where owner  = 'LX_DAILY'
Select * from dba_mviews where   mview_name = 'WKAB_OVERPAY_MV'

Determine if any MV being currently refreshed:

select Count(*) from v$mvrefresh;

Good Note: How to monitor the progress of a materialized view refresh (MVIEW) [ID 258021.1]

**********************************************************************************

Hi Mike, Eugene,
I am testing out the push reversal code. 
I have created materialized views instead of table for most tables.
The process appears to be working, but when the mv's are created the data is loaded, so I do not know
for sure that it is truncating the data and reloading.  Is there a way for me to either create the mv's 
empty or delete data from them, then run the process and verify they were loaded?

Yes.  This should work.
 
SQL> create materialized view x build deferred as select * from dba_users;
 
Materialized view created.
 
SQL> select count(*) from x;
 
  COUNT(*)
----------
         0

The BUILD DEFERRED is OK as long as it's OK for there to be no data until the refresh. 
 It's actually good from the standpoint that the deployment will go much faster.


********** Last Refresh Time and Last analyzed Time compare ************************************

Select A.OWNER, A.NAME,LAST_REFRESH, B.last_analyzed from dba_mview_refresh_times A,dba_tables B
 where A.OWNER  = b.OWNER  and A.NAME = B.TABLE_NAME AND A.OWNER = 'DRWKAB' and A.NAME IN
('WKAB_CLAIMANT_MV', 'WKAB_ACCOUNT_STRUCTURE_MV','WKAB_EMPLOYEE_PLANS_MV', 'WKAB_PLAN_MV','WKAB_LOOKUP_MV')



***************************************************************************************************

Hi Mike/Eugene,

We have a zeke job that refreshes data from data repository to datamart.
The Zeke job calls the unix script /dm/bin/exec_lx_mv.sh on datamart serevr. We are getting below error for lx_daily.lx_payment_master_mv

BEGIN dbms_mview.refresh('lx_daily.lx_payment_master_mv','F'); END;

*
ERROR at line 1:
ORA-12034: materialized view log on "LUMINX"."LX_PAYMENT_MASTER" younger than
last refresh
ORA-06512: at "SYS.DBMS_SNAPSHOT", line 2563
ORA-06512: at "SYS.DBMS_SNAPSHOT", line 2776
ORA-06512: at "SYS.DBMS_SNAPSHOT", line 2745
ORA-06512: at line 1

Do you know what the error means. Do we need to drop the materialized view and re-create it.

I see below three columns present in table “LUMINX"."LX_PAYMENT_MASTER on DR02 but not present in lx_daily.lx_payment_master_mv on DM02.

KRMS_SENT             VARCHAR2(1)  Y                         
KRMS_FLAG             VARCHAR2(1)  Y                         
KRMS_PROC_ID          NUMBER(10)   Y                         
CURRENCY_CODE         VARCHAR2(3)  Y    

We started facing this issue from 08/29/2013 onwards.

---->
Try just running one time:
dbms_mview.refresh('lx_daily.lx_payment_master_mv','C');

I think it’s out of sync somehow so you need to do a complete refresh to sync things up, then after that the fast refresh should work fine.

---->
Sorry – I also meant to ask do you need those extra columns to show up on DM02 as well?  If so then  yes, you’d have to recreate the mview.  That would also do a complete refresh which would fix the other issue as well.


