aorinfw1d:   oracle -  Rock#123
             system - Z00mZ00m!

xorinfdbw1d: oracle -  Bl0ckhe@d
             system - locked99999
 
app server: xppmw3d - move2s10

*********************************************************************************************
*********************************************************************************************
*********************************************************************************************




Pre-Steps

1) Send email to Storman to have tdpo installed (if not already installed).

   Already installed on xorinfdbw1d in support of PPMDEBIZ migration


2) Logon to Next Gen server xorinfdbw1d


3) Create link to allow Oracle to communicate with TSM (after tdpo has been installed by Storman)

   Already created in support of PPMTEST migration

   cd $HOME

   . oraenv
   PPMDEBIZ

   cd $ORACLE_HOME/lib

   ln -s /opt/tivoli/tsm/client/oracle/bin64/libobk.so libobk.so


4) Create new database

   cd /orahome/u01/app/oracle/local/scripts

   Script accepts 5 input parameters

   <dbms_version>  <target_db_name>  <target_db_port>  <char_set>  <nchar_set>

   ./clone_sb_db.sh 12.1.0.2.160719 PPMDEBIZ 1551 WE8ISO8859P1 AL16UTF16

   Log file is written to /orahome/u01/app/oracle/local/logs

   Log file: /orahome/u01/app/oracle/local/logs/clone_db_PPMDEBIZ_20160812_1471009417.out


5) Configure new PPMDEBIZ database for RMAN (no catalog connections at this time)

   cd /home/oracle/tdpoopt

   create file tdpo.PPMDEBIZ.opt   



   cd /home/oracle/tls/rman

   rman

   rman =>connect target /
   
   rman => @configure_PPMDEBIZ.rman


6) Add N025774 to database

   cd /home/oracle/tls

   # Modify Password
   vi create_user.sql

   sqlplus / as sysdba

   @create_user.sql

   # Set password to XYZ
   vi create_user.sql


7) Take a database backup after initial creation

   cd /home/oracle/tls/rman

   export NLS_DATE_FORMAT='YYYY-MM-DD HH24:MI:SS'

   rman |tee backup_PPMDEBIZ_aft_initial_create.out

   rman => connect target /
   
   rman => @incremental_level0_backup_tape_ppm.rman 


8) Modify master tnsnames.ora file used by SWM and LDAP in ICR to reflect new hosts
   and service PPMDEBIZ_APP.


9) Logoff Next Gen server xorinfdbw1d



!!! To revert NextGen Db back to deault.


cd $ORACLE_HOME/dbs

cp spfilePPMDEBIZ.ora_b4_ppm_additions spfilePPMDEBIZ.ora

cd $HOME/tls/rman/

rman

@restore_ppmdebiz_aft_create.rman
exit


End Pre-Steps

*********************************************************************************************
*********************************************************************************************
*********************************************************************************************





!! Take AIX DB backup and Save

cd $SCRIPTS/backup


./rman_general_purpose_oem.ksh PPMDEBIZ RCATDEV incremental_level0_backup_tape_oem.rman Y


#Once backup completed. Get latest log file name
cd $INSTANCE_OUTPUTS/rman_backups

ls -altr *.log

#Save Backup
$BKPSCR/savebkp.ksh $ORACLE_SID PPMDEBIZ_20161006_11:25:23_incremental_level0_backup_tape_oem.rman.log b4NextGenMig



view PPMDEBIZ backup saved as PPMDEBIZ_sbk_20161006_11:25:23_b4NextGenMig.rman


##Restore DataBase
#connect target /
#connect catalog PPMDEBIZ/XXX@RCATDEV
#startup force nomount;
#set DBID=3478304185;
#reset database to incarnation 2;
#restore controlfile from 'c-3478304185-20161006-09_PPMDEBIZ';
#alter database mount;
#run{
#restore database until sequence 10822;
#recover database until sequence 10822;
#}
#alter database open resetlogs;
##End Restore DataBase



Test restore


rman

connect target /

connect catalog PPMDEBIZ/PPMDEBIZnamr@RCATDEV

#restore database validate until sequence 10822;
#restore validate database;
#restore archivelog all validate;

*********************************************************************************************
*********************************************************************************************
*********************************************************************************************

DBA must follow this document Doc ID 1585256.1 it gives all the steps to prep-up and exp/imp the db. Your starting point is section 1, step 3.


Section 1: Prepare the source system

1. Apply prerequisite patches 

   -->Should be completed by App Admin


2. Apply the Applications consolidated export/import utility patch 

   -->Should be completed by App Admin



3. Create a working directory 


Go back to AIX (Source) server.   

   mkdir /oraexport/meru276/PPMDEBIZ
   mkdir /orahome/allu01/aetna/scripts/PPMDEBIZ/DBA_FILES
   


sqlplus / as sysdba

CREATE OR REPLACE DIRECTORY DATA_PUMP_DIR3 AS '/oraexport/meru276/PPMDEBIZ/'
/
GRANT EXECUTE ON DIRECTORY DATA_PUMP_DIR3 TO A236120 WITH GRANT OPTION
/
GRANT READ ON DIRECTORY DATA_PUMP_DIR3 TO A236120 WITH GRANT OPTION
/
GRANT WRITE ON DIRECTORY DATA_PUMP_DIR3 TO A236120 WITH GRANT OPTION
/
GRANT READ ON DIRECTORY DATA_PUMP_DIR3 TO EXP_FULL_DATABASE
/
GRANT WRITE ON DIRECTORY DATA_PUMP_DIR3 TO EXP_FULL_DATABASE
/
GRANT READ ON DIRECTORY DATA_PUMP_DIR3 TO IMP_FULL_DATABASE
/
GRANT WRITE ON DIRECTORY DATA_PUMP_DIR3 TO IMP_FULL_DATABASE
/
GRANT EXECUTE ON DIRECTORY DATA_PUMP_DIR3 TO N025774 WITH GRANT OPTION
/
GRANT READ ON DIRECTORY DATA_PUMP_DIR3 TO N025774 WITH GRANT OPTION
/
GRANT WRITE ON DIRECTORY DATA_PUMP_DIR3 TO N025774 WITH GRANT OPTION
/



Ask App Admin to copy following scripts from app server to Oracle Server. He should place
then into some dir on app server.

$AU_TOP/patch/115/sql/

auclondb.sql
auque1.sql
audb1210.sql
ausy1210.sql
aujv1210.sql
aumsc1210.sql


$AU_TOP/patch/115/import/
auexpdp.dat
auxmlexp.dat
aufullimp.dat


$APPL_TOP/admin/
adgrants.sql       

$AD_TOP/patch/115/sql/
adctxprv.sql       


$AU_TOP/patch/115/bin/
dpost_imp.pl


$XLA_TOP/patch/115/sql/
xla6128278.sql

$APPL_TOP/admin/ 
adstats.sql

$AD_TOP/patch/115/sql/adctxpkg.sql
		      adctxprv.sql



login to Linux App server and copy: xppmw3d


scp -rp /aetnas28/asrxoracle/DBAixUpg/ahm/DBA_FILES aorinfw1d:/orahome/allu01/aetna/scripts/PPMDEBIZ/DBA_FILES




4. Generate target database instance creation script aucrdb.sql 


Go back to AIX (Source) server.

cd /orahome/allu01/aetna/scripts/PPMDEBIZ/DBA_FILES

Login with system account


sqlplus

system/Z00mZ00m!@PPMDEBIZ


 @auclondb.sql 12



5. Record Advanced Queue settings 

Go back to AIX (Source) server.

cd /orahome/allu01/aetna/scripts/PPMDEBIZ/DBA_FILES

sqlplus / as sysdba

 @auque1.sql



6. Remove rebuild index parameter in spatial indexes 


Go back to AIX (Source) server.


sqlplus / as sysdba

select * from dba_indexes where index_type='DOMAIN' and upper(parameters) like '%REBUILD%';
select count(*) from dba_indexes where index_type='DOMAIN' and upper(parameters) like '%REBUILD%';


sqlplus as HR



alter index HR.PER_ADDRESSES_SPT rebuild parameters ('sdo_indx_dims=2');
alter index HR.PER_ADDRESSES_SPT rebuild parameters ('sdo_rtr_pctfree=10');
alter index HR.PER_ADDRESSES_SPT rebuild parameters ('tablespace=APPS_TS_TX_IDX');



alter index HR.HR_LOCATIONS_SPT rebuild parameters ('sdo_indx_dims=2');
alter index HR.HR_LOCATIONS_SPT rebuild parameters ('sdo_rtr_pctfree=10');
alter index HR.HR_LOCATIONS_SPT rebuild parameters ('tablespace=APPS_TS_TX_IDX');

 

sqlplus as MST

alter index MST.MST_MD_ADM_BNDS_N1 rebuild parameters ('sdo_indx_dims=2');
alter index MST.MST_MD_ADM_BNDS_N1 rebuild parameters ('sdo_rtr_pctfree=10');
alter index MST.MST_MD_ADM_BNDS_N1 rebuild parameters ('tablespace=APPS_TS_TX_IDX');



alter index MST.MST_MD_HYDROS_N1 rebuild parameters ('sdo_indx_dims=2');
alter index MST.MST_MD_HYDROS_N1 rebuild parameters ('sdo_rtr_pctfree=10');
alter index MST.MST_MD_HYDROS_N1 rebuild parameters ('tablespace=APPS_TS_TX_IDX');

  
sqlplus / as sysdba

select count(*) from dba_indexes where index_type='DOMAIN' and upper(parameters) like '%REBUILD%';

Should return 0


7. Synchronize Text indexes 


Go back to AIX (Source) server.


sqlplus / as sysdba

select pnd_index_owner,pnd_index_name,count(*)
  from ctxsys.ctx_pending
  group by pnd_index_owner,pnd_index_name;

PND_INDEX_OWNER                PND_INDEX_NAME                   COUNT(*)
------------------------------ ------------------------------ ----------
APPLSYS                        FND_LOBS_CTX                            2
JTF                            JTF_AMV_ITEMS_NAME_CTX               1131
JTF                            JTF_AMV_ITEMS_DESC_CTX               1131
JTF                            JTF_AMV_ITEMS_TEXT_CTX               1131
IBC                            IBC_ATTRIBUTE_BUNDLES_CTX              58





exec ctx_ddl.sync_index('APPLSYS.FND_LOBS_CTX');
exec ctx_ddl.sync_index('JTF.JTF_AMV_ITEMS_NAME_CTX');
exec ctx_ddl.sync_index('JTF.JTF_AMV_ITEMS_DESC_CTX');
exec ctx_ddl.sync_index('JTF.JTF_AMV_ITEMS_TEXT_CTX');
exec ctx_ddl.sync_index('IBC.IBC_ATTRIBUTE_BUNDLES_CTX');

select pnd_index_owner,pnd_index_name,count(*)
  from ctxsys.ctx_pending
  group by pnd_index_owner,pnd_index_name;

Should return 0


Section 2: Prepare a target Release 12 database instance

1. Create target Oracle 12c Oracle home (conditional) 

  Completed prior.

2. Modify sqlnet.ora file (Windows only) 

   N/A

3. Create the target initialization parameter file and CBO parameter file


Go back to Linux (Target) server.

cd $ORACLE_HOME/dbs

sqlplus / as sysdba



**** double check make sure spfile located on file system. sometimes it goes to ASM 

asmcmd -p

cd +DATA_01
Mon Oct 17 17:29:22 2016
Creating SPFILE  +DATA_01/spfilePPMDEBIZ.ora
The spfile name is +DATA_01/spfilePPMDEBIZ.ora

**********************************************************
###create pfile from spfile;


###create spfile='/orahome/u01/app/oracle/product/12.1.0.2.160719/db_1/dbs/spfilePPMDEBIZ.ora' from pfile; 

####create pfile='/orahome/u01/app/oracle/product/12.1.0.2.160719/db_1/dbs/initPPMDEBIZ.ora' from spfile;


--Add SERVICE_NAME
ALTER SYSTEM SET SERVICE_NAMES='PPMDEBIZ';


-- Add to server tnsnames.ora
PPMDEBIZ,PPMDEBIZ.WORLD  =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = xorinfdbw1d.aetna.com)(PORT = 1551))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME =  PPMDEBIZ)
    )
  )


--Modify sqlnet.ora
#NAMES.DIRECTORY_PATH= (LDAP, TNSNAMES)
NAMES.DIRECTORY_PATH= (TNSNAMES)








sqlplus / as sysdba

shutdown immediate
startup


exit

vi initPPMDEBIZ.ora


   Make sure to add.

*.undo_management='AUTO'
*.undo_retention=21600
*.undo_tablespace='APPS_UNDOTS1'

create spfile='/orahome/u01/app/oracle/product/12.1.0.2.160719/db_1/dbs/spfilePPMDEBIZ.ora' from pfile; 



shutdown immediate
startup

--Make sure file located under $ORACLE_HOME/dbs
show parameter spfile



select GLOBAL_NAME from SYS.GLOBAL_NAME;

ALTER DATABASE RENAME GLOBAL_NAME TO PPMDEBIZ.AETNA.COM;


alter system set UTL_FILE_DIR = '/tmp' scope=spfile;

alter system set open_links_per_instance=50 scope=spfile;
alter system set open_links=50 scope=spfile;


--Add SERVICE_NAME
ALTER SYSTEM SET SERVICE_NAMES='PPMDEBIZ';
--So we have service_name set just in case we need to use init.ora in future.
create pfile from spfile;

shutdown immediate

startup

4. Create a working directory 



   Go back to Linux (Target) server.
  

   ##mkdir if not already there

   mdkir /oraexport/u01/PPMDEBIZ

   Go back to AIX (Source) server.


   ## copy all scripts to target server. This will create /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES 

   scp -rp /orahome/allu01/aetna/scripts/PPMDEBIZ/DBA_FILES xorinfdbw1d:/home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES


5. Create the target database instance 


Go back to Linux (Target) server.

cd  /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES

## Since Database already created. Extract what missing and modify based on new environment. 

view aucrdb.sql


vi createTablespaces.sql


CREATE TABLESPACE AEDBA
        DATAFILE '+DATA_01' SIZE 5M AUTOEXTEND ON NEXT 5M MAXSIZE 50M
        EXTENT MANAGEMENT LOCAL AUTOALLOCATE
        LOGGING
        ONLINE
        SEGMENT SPACE MANAGEMENT AUTO
    /

    CREATE TABLESPACE APPS_TS_TX_DATA
        DATAFILE '+DATA_01' SIZE 4096M AUTOEXTEND OFF,
                 '+DATA_01' SIZE 2048M AUTOEXTEND ON NEXT 10M MAXSIZE 4096M
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
    /

   CREATE TABLESPACE ODM
       DATAFILE '+DATA_01' SIZE 20M AUTOEXTEND ON NEXT 5M MAXSIZE 50M
       EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
       LOGGING
       ONLINE
       SEGMENT SPACE MANAGEMENT AUTO
    /

    CREATE TABLESPACE OLAP
        DATAFILE '+DATA_01' SIZE 40M AUTOEXTEND ON NEXT 5M MAXSIZE 100M
        EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
        LOGGING
        ONLINE
        SEGMENT SPACE MANAGEMENT AUTO
    /

    CREATE TABLESPACE OWAPUB
        DATAFILE '+DATA_01' SIZE 10M AUTOEXTEND ON NEXT 5M MAXSIZE 20M
        EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
        LOGGING
        ONLINE
        SEGMENT SPACE MANAGEMENT AUTO
    /

    CREATE TABLESPACE PORTAL
        DATAFILE '+DATA_01' SIZE 10M AUTOEXTEND ON NEXT 5M MAXSIZE 100M
        EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
        LOGGING
        ONLINE
        SEGMENT SPACE MANAGEMENT AUTO
    /


   CREATE TABLESPACE PPMFIND
       DATAFILE '+DATA_01' SIZE 1200M AUTOEXTEND ON NEXT 10M MAXSIZE 4096M
       EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
       LOGGING
       ONLINE
       SEGMENT SPACE MANAGEMENT AUTO
    /

    CREATE TABLESPACE PPMFINCLOB
       DATAFILE '+DATA_01' SIZE 10M AUTOEXTEND ON NEXT 10M MAXSIZE 2048M
       EXTENT MANAGEMENT LOCAL AUTOALLOCATE
       LOGGING
       ONLINE
       SEGMENT SPACE MANAGEMENT AUTO
   /

   CREATE TABLESPACE PPMFINX
       DATAFILE '+DATA_01' SIZE 10M AUTOEXTEND ON NEXT 10M MAXSIZE 2048M
       EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
       LOGGING
       ONLINE
       SEGMENT SPACE MANAGEMENT AUTO
   /

   CREATE TABLESPACE PPMRXD
       DATAFILE '+DATA_01' SIZE 1200M AUTOEXTEND ON NEXT 10M MAXSIZE 2048M
       EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
       LOGGING
       ONLINE
       SEGMENT SPACE MANAGEMENT AUTO
   /

   CREATE TABLESPACE PPMRXCLOB
       DATAFILE '+DATA_01' SIZE 10M AUTOEXTEND ON NEXT 10M MAXSIZE 2048M
       EXTENT MANAGEMENT LOCAL AUTOALLOCATE
       LOGGING
       ONLINE
       SEGMENT SPACE MANAGEMENT AUTO
   /

   CREATE TABLESPACE PPMRXX
       DATAFILE '+DATA_01' SIZE 10M AUTOEXTEND ON NEXT 10M MAXSIZE 2048M
       EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
       LOGGING
       ONLINE
       SEGMENT SPACE MANAGEMENT AUTO
   /

   CREATE TEMPORARY TABLESPACE TEMP1
     TEMPFILE '+DATA_01' SIZE 500M AUTOEXTEND ON NEXT 10M MAXSIZE 8192M

     EXTENT MANAGEMENT LOCAL UNIFORM SIZE 1M
   /

CREATE UNDO TABLESPACE APPS_UNDOTS1
    DATAFILE '+DATA_01' SIZE 10240M AUTOEXTEND OFF,
             '+DATA_01' SIZE 10240M AUTOEXTEND OFF,
             '+DATA_01' SIZE 10240M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE
    ONLINE
/


CREATE TABLESPACE APPS_TS_ARCHIVE
    DATAFILE '+DATA_01' SIZE 600M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/
CREATE TABLESPACE APPS_TS_INTERFACE
    DATAFILE '+DATA_01' SIZE 800M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/
CREATE TABLESPACE APPS_TS_MEDIA
    DATAFILE '+DATA_01' SIZE 1200M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/
CREATE TABLESPACE APPS_TS_NOLOGGING
    DATAFILE '+DATA_01' SIZE 100M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/
CREATE TABLESPACE APPS_TS_QUEUES
    DATAFILE '+DATA_01' SIZE 100M AUTOEXTEND OFF,
             '+DATA_01' SIZE 100M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/




CREATE TABLESPACE APPS_TS_SEED
    DATAFILE '+DATA_01' SIZE 2048M AUTOEXTEND OFF,
             '+DATA_01' SIZE 2048M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/
CREATE TABLESPACE APPS_TS_SUMMARY
    DATAFILE '+DATA_01' SIZE 1200M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/
CREATE TABLESPACE APPS_TS_TX_IDX
    DATAFILE '+DATA_01' SIZE 4096M AUTOEXTEND OFF,
             '+DATA_01' SIZE 3072M AUTOEXTEND OFF,
             '+DATA_01' SIZE 3072M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/
CREATE TABLESPACE CTXD
    DATAFILE '+DATA_01' SIZE 50M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/
CREATE TABLESPACE APPS_TS_TOOLS
    DATAFILE '+DATA_01' SIZE 50M AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL UNIFORM SIZE 128K
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/




sqlplus / as sysdba

@createTablespaces.sql

exit


Use DBArtisan to extract exact file name 

   ALTER DATABASE 
TEMPFILE '+DATA_01/PPMDEBIZ_XORINFDBW1D/TEMPFILE/temp.341.925129155' AUTOEXTEND ON NEXT 10M MAXSIZE 8192M
;

   ALTER DATABASE 
DATAFILE '+DATA_01/PPMDEBIZ_XORINFDBW1D/DATAFILE/undotbs1.339.925129059' AUTOEXTEND ON NEXT 10M MAXSIZE 8192M
;



--Confirm sizes of Next Gen tablespaces (system,temp,users,sysaux,undo...) to source database before running full import

---Note: File Names may have changed so confirm first or run in DBArtisan

ALTER DATABASE 
DATAFILE '+DATA_01/PPMDEBIZ_XORINFDBW1D/DATAFILE/system.337.925129059' RESIZE 12G
;


ALTER DATABASE 
DATAFILE '+DATA_01/PPMDEBIZ_XORINFDBW1D/DATAFILE/system.337.925129059' AUTOEXTEND ON NEXT 100M MAXSIZE 14336M
;



on AIX Source

select count(*) from dba_data_files

47

select count(*) from dba_temp_files
2

select count(*) from dba_tablespaces

28

On Linux target

select count(*) from dba_data_files

35

select count(*) from dba_temp_files
2

select count(*) from dba_tablespaces

30



Go back to Linux (Target) server.

--Since we added new UNDO tbl do following

cd $ORACLE_HOME/dbs

mv spfilePPMDEBIZ.ora spfilePPMDEBIZ.ora.ori

-- Bounce DB to startup from pfile for now

sqlplus / as sysdba

shutdown immediate;
startup

show parameter spfile;

should be empty



6. Copy database preparation scripts to target Oracle home 


Should be done in Step 5


7. Set up the SYS schema 



cd  /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES



Compare what is out there first


Source

select comp_id, comp_name from dba_registry  order by 1,2

AMD	OLAP Catalog
APS	OLAP Analytic Workspace
CATALOG	Oracle Database Catalog Views
CATJAVA	Oracle Database Java Packages
CATPROC	Oracle Database Packages and Types
CONTEXT	Oracle Text
JAVAVM	JServer JAVA Virtual Machine
ODM	Oracle Data Mining
ORDIM	Oracle Multimedia
RAC	Oracle Real Application Clusters
SDO	Spatial
XDB	Oracle XML Database
XML	Oracle XDK
XOQ	Oracle OLAP API


Target

select comp_id, comp_name from dba_registry  order by 1,2


APEX	Oracle Application Express
APS	OLAP Analytic Workspace
CATALOG	Oracle Database Catalog Views
CATJAVA	Oracle Database Java Packages
CATPROC	Oracle Database Packages and Types
CONTEXT	Oracle Text
DV	Oracle Database Vault
JAVAVM	JServer JAVA Virtual Machine
OLS	Oracle Label Security
ORDIM	Oracle Multimedia
OWM	Oracle Workspace Manager
RAC	Oracle Real Application Clusters
SDO	Spatial
XDB	Oracle XML Database
XML	Oracle XDK
XOQ	Oracle OLAP API


sqlplus / as sysdba

##@audb1210.sql

!! Thats all what was missing.

Go back to Linux (Target) server.


sqlplus / as sysdba

@?/rdbms/admin/userlock.sql
@?/rdbms/admin/catblock.sql


8. Set up the SYSTEM schema

Go back to Linux (Target) server.


sqlplus 

system/locked99999


@ausy1210.sql

9. Install Java Virtual Machine 
 
   Completed before.

10. Install other required components 


    view aumsc1210.sql

    skip for now


11. Install custom RDBMS components (conditional) 

   All set.

12. Perform patch post-install instructions 
   
    no need.


13. Set CTXSYS parameter 
Go back to Linux (Target) server.


$ sqlplus "/ as sysdba"
SQL> exec ctxsys.ctx_adm.set_parameter('file_access_role', 'public');

14. Disable automatic gathering of statistics 

Go back to Linux (Target) server.

SQL> alter system enable restricted session;

 @adstats.sql

SQL> alter system disable restricted session;


15. Back up the target database instance 


Go back to Linux (Target) server.

 Set database in noarchivelog mode

   cd $HOME/tls

   sqlplus / as sysdba

   @stop_archive.sql



 

  cd $HOME/tls/rman

  rman |tee backup_PPMDEBIZ_20161010.out

  connect target /

  @full_noarchivelog_backup.rman



Section 3: Export the source Release 12 database instance

1. Create the export parameter file 

Go back to AIX (Source) server.

cd /orahome/allu01/aetna/scripts/PPMDEBIZ/DBA_FILES

---Just to see what Oracle suggesting.
vi auexpdp.dat


--Create actual .par file

cd /oraexport/meru276/PPMDEBIZ/

vi expdp_ppmdebiz_full.par

directory=DATA_PUMP_DIR3
dumpfile=expdp_ppmdebiz_full_%U.dmp
full=y
logfile=expdp_ppmdebiz_full.log
metrics=y
parallel=4
reuse_dumpfiles=true
QUERY=applsys.wf_item_attribute_values:"where item_type!='WFERROR' and name != 'EVENT_MESSAGE'"
exclude=tablespaces
exclude=statistics
version=12

2. Shut down Applications server processes 

   Done.

3. Grant privilege to source system schema 

   
   
   Go back to AIX (Source) server.

   sqlplus / as sysdba

   grant EXEMPT ACCESS POLICY to system;



4. Remove the MGDSYS schema (conditional) 

   Go back to AIX (Source) server.

   sqlplus / as sysdba

   @?/md/admin/catnomgdidcode.sql


!!!!!Attention:
If the source 11g database will still be used, then the MGDSYS schema is still required.
Run the $ORACLE_HOME/md/admin/catmgdidcode.sql script on the source database after the export has completed to re-create the MGDSYS schema. 



5. Export OLAP analytical workspaces (optional) 

   Skip this step for now.


6. Drop XLA packages (optional) 

   Skip this step for now



7. Export the Applications database instance 

Go back to AIX (Source) server.


cd /oraexport/meru276/PPMDEBIZ/

expdp system/Z00mZ00m! parfile=expdp_ppmdebiz_full.par


Can ignore the following errors


ORA-31693: Table data object "SYSTEM"."SCHEDULER_PROGRAM_ARGS" failed to load/un
load and is being skipped due to error:
ORA-29913: error in executing ODCIEXTTABLEPOPULATE callout
ORA-00600: internal error code, arguments: [kotTrns:transient], [], [], [], [],
[], [], [], [], [], [], []

8. Export tables with XML type columns (conditional) 

   N/A - If the source database is Oracle Database 10g Release 2 (10.2.0),


9. Revoke privilege from source system schema 

   Go back to AIX (Source) server.

   sqlplus / as sysdba

   revoke EXEMPT ACCESS POLICY from system;


Section 4: Import the Release 12 database instance

1. Create the import parameter files 



Go back to Linux (Target) server.

--- This is just sample file .par file.

cd  /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES

vi auimpdp.dat

directory=dmpdir
dumpfile=aexp%U.dmp
full=y
transform=oid:n
# exclude=tablespace
# exclude=profile
# exclude=user
# exclude=role
# exclude=system_grant
# exclude=proc_system_grant
# exclude=role_grant
logfile=impdpapps.log
metrics=y

$AU_TOP/patch/115/import/aufullimp.dat



-- Create users .par file for import first

cd /oraexport/u01/PPMDEBIZ

vi impdp_create_users.par


--Create full import .par and ksh to run it.

cd /oraexport/u01/PPMDEBIZ

vi run_full_impdp.ksh
vi impdp_ppmdebiz_full.par





--Make sure appropriate data pump dir exist


sqlplus / as sysdba


CREATE OR REPLACE DIRECTORY DATA_PUMP_DIR2 AS '/oraexport/u01/PPMDEBIZ'
/
GRANT READ ON DIRECTORY DATA_PUMP_DIR2 TO EXP_FULL_DATABASE
/
GRANT WRITE ON DIRECTORY DATA_PUMP_DIR2 TO EXP_FULL_DATABASE
/
GRANT READ ON DIRECTORY DATA_PUMP_DIR2 TO IMP_FULL_DATABASE
/
GRANT WRITE ON DIRECTORY DATA_PUMP_DIR2 TO IMP_FULL_DATABASE
/
GRANT READ ON DIRECTORY DATA_PUMP_DIR2 TO SYSTEM WITH GRANT OPTION
/
GRANT WRITE ON DIRECTORY DATA_PUMP_DIR2 TO SYSTEM WITH GRANT OPTION
/





   

2. Copy the export dump files 

   Go back to AIX (Source) server.   

   cd /oraexport/meru276/PPMDEBIZ/

   scp -p expdp_ppmdebiz_full_01.dmp xorinfdbw1d:/oraexport/u01/PPMDEBIZ
   scp -p expdp_ppmdebiz_full_02.dmp xorinfdbw1d:/oraexport/u01/PPMDEBIZ
   scp -p expdp_ppmdebiz_full_03.dmp xorinfdbw1d:/oraexport/u01/PPMDEBIZ
   scp -p expdp_ppmdebiz_full_04.dmp xorinfdbw1d:/oraexport/u01/PPMDEBIZ


3. Import the Applications database instance 

   Go back to AIX (Source) server.

   ---Extract SYS and CTXSYS Privs

   Run the following on the AIX server

   cd /orahome/allu01/app/oracle/tls/migratedb/PPMDEBIZ

   sqlplus / as sysdba

   @ext_grant_sys_privs.sql PPMDEBIZ

   select dbms_metadata.get_ddl('PACKAGE', 'AD_DBMS_METADATA', 'SYS') from dual;
   select dbms_metadata.get_ddl('PACKAGE_BODY', 'AD_DBMS_METADATA', 'SYS') from dual;

   scp -p grant_sys_privs_PPMDEBIZ.sql xorinfdbw1d.aetna.com:/home/oracle/tls/migratedb/PPMDEBIZ

   Logoff the AIX server




   Go back to Linux (target) server. 


   --- Create password function and profiles first

   cd $HOME/tls/migratedb/PPMDEBIZ

   sqlplus / as sysdba

   @create_password_function.sql

   @create_profiles.sql


  --import users first
   cd /oraexport/u01/PPMDEBIZ


  impdp system/locked99999 parfile=impdp_create_users.par

   
  
sqlplus / as sysdba
   
   CREATE ROLE AD_PATCH_MONITOR_ROLE NOT IDENTIFIED;
   CREATE ROLE EM_OAM_MONITOR_ROLE NOT IDENTIFIED;


   cd /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES
   sqlplus / as sysdba

    grant select on sys.user$ to system;

    set trimspool on

    spool grant_sys_privs_PPMDEBIZ.out

    @grant_sys_privs_PPMDEBIZ.sql

    spool off






   ####Resize redo logs (Too many switches were occurring during impdp)

select * from v$logfile;

MEMBER
MEMBER
+REDOA_01/PPMDEBIZ_XORINFDBW1D/ONLINELOG/group_3.370.925129153
+REDOB_01/PPMDEBIZ_XORINFDBW1D/ONLINELOG/group_3.370.925129155

+REDOA_01/PPMDEBIZ_XORINFDBW1D/ONLINELOG/group_2.369.925129153
+REDOB_01/PPMDEBIZ_XORINFDBW1D/ONLINELOG/group_2.369.925129153

+REDOA_01/PPMDEBIZ_XORINFDBW1D/ONLINELOG/group_1.368.925129153
+REDOB_01/PPMDEBIZ_XORINFDBW1D/ONLINELOG/group_1.368.925129153



    ALTER DATABASE ADD LOGFILE GROUP 4 ('+REDOA_01','+REDOB_01') SIZE 50M;

    ---Make logfile group 1 the current group

     select group#, status from v$log order by group#;




GROUP# STATUS
------ ----------
     1 CURRENT
     2 INACTIVE
     3 INACTIVE
     4 UNUSED


     alter system switch logfile; (as many times as needed)

     alter system checkpoint global;

    ### drop groups 2 and 3

    ALTER DATABASE DROP LOGFILE GROUP 2
;
    ALTER DATABASE DROP LOGFILE GROUP 3;

    ALTER DATABASE ADD LOGFILE GROUP 2 ('+REDOA_01','+REDOB_01') SIZE 200M;
    ALTER DATABASE ADD LOGFILE GROUP 3 ('+REDOA_01','+REDOB_01') SIZE 200M;

    --Make logfile group 1 not the current group

     select group#, status from v$log order by group#;
     alter system switch logfile;

     alter system checkpoint global;


 GROUP# STATUS
------- --------
      1 INACTIVE
      2 CURRENT
      3 UNUSED
      4 UNUSED
select group#, status from v$log order by group#;

    ALTER DATABASE DROP LOGFILE GROUP 1;

    ALTER DATABASE ADD LOGFILE GROUP 1 ('+REDOA_01','+REDOB_01') SIZE 200M;

    ALTER DATABASE DROP LOGFILE GROUP 4
;




  
   
    


    cd /oraexport/u01/PPMDEBIZ


    nohup ./run_full_impdp.ksh PPMDEBIZ &

    PPMDEBIZ - x hours

    tail -f nohup.log

    cat nohup.out|grep -i "ora-" |egrep -v "31684|39082|39083|07443|39151|39171"




CREATE OR REPLACE DIRECTORY APPS_DATA_FILE_DIR AS '/orahome/u01/app/oracle/product/12.1.0.2.160719/db_1/appsutil/outbound/PPMDEBIZ_xorinfdbw1d'
/
GRANT EXECUTE ON DIRECTORY APPS_DATA_FILE_DIR TO APPS WITH GRANT OPTION
/
GRANT READ ON DIRECTORY APPS_DATA_FILE_DIR TO APPS WITH GRANT OPTION
/
GRANT WRITE ON DIRECTORY APPS_DATA_FILE_DIR TO APPS WITH GRANT OPTION
/


sqlplus / as sysdba
 CREATE PUBLIC SYNONYM dbms_system FOR dbms_system;

 GRANT EXECUTE ON dbms_system TO APPS;
exit


@?/rdbms/admin/utlrp.sql


select count(*)
from dba_objects
where status = 'INVALID';

33 (target) vs 34 (Source)

select object_type,count(*)
    from dba_objects
    where status != 'VALID'
    and object_name not like 'BIN$%'
    group by object_type;



OBJECT_TYPE	COUNT(*)
PROCEDURE	8
PACKAGE BODY	8
VIEW	10
SYNONYM	7


 select owner,count(*)
    from dba_objects
    where status != 'VALID'
    and object_name not like 'BIN$%'
    group by owner;


(Target)




OWNER	COUNT(*)

	PPMRX	10
	PPMFIN	10
APPS	6
	RMLFIN	4
	RMLRX	3


(Source)

OWNER	COUNT(*)
	RMLRX	3
	RMLFIN	4
APPS	7
	PPMFIN	10
	PPMRX	10


4. Import OLAP analytical workspaces (conditional) 


5. Revoke privilege from target system schema 

  Go back to Linux (target) server.

  sqlplus / as sysdba

  revoke EXEMPT ACCESS POLICY from system;



Section 5: Update the imported Release 12 database instance


1. Reset Advanced Queues 

scp -p /orahome/allu01/aetna/scripts/PPMDEBIZ/DBA_FILES/auque2.sql xorinfdbw1d:/home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES/auque2.sql 


Go back to Linux (target) server.

cd /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES

sqlplus / as sysdba

@auque2.sql



2. Start the new database listener (conditional) 

   All set.

3. Run adgrants.sql 


Go back to Linux (target) server.

cd /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES


@adgrants.sql

Enter value for 1: APPS


4. Grant create procedure privilege on CTXSYS 



Go back to Linux (target) server.


cd /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES

Use SQL*Plus to connect to the database as APPS and run the script using the following command: 

sqlplus apps/apps

@adctxprv.sql

Z00mZ00m!

CTXSYS



What To Do After A Migration To Linux And The AD_CTX_DDL Package Is Missing (Doc ID 1917695.1)
cd /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES
sqlplus as / sysdba


@adctxpkg.sql

--> Z00mZ00m!
-- CTXSYS
--> apps



5. Apply patch 6494466 (conditional) 

   N/A


6. Gather statistics for SYS schema 


Go back to Linux (target) server.

cd /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES


$ sqlplus "/ as sysdba"
SQL> alter system enable restricted session;
SQL> @adstats.sql
$ sqlplus "/ as sysdba"
SQL> alter system disable restricted session;
SQL> exit;


--Send email to Hameed


Doc ID 1585256.1

Section 5: Update the imported Release 12 database instance

pre steps

login to Linux App server and copy: xppmw3d


scp  /aetnas28/asrxoracle/DBA_REQ_FILES/appsutil.zip.ppm xorinfdbw1d:/home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES/appsutil.zip.ppm


scp  /aetnas28/asrxoracle/DBA_REQ_FILES/adctxpkg.sql xorinfdbw1d:/home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES/adctxpkg.sql

Go back to Linux (target) server.

cd /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES

mv appsutil.zip.ppm appsutil.zip



7. Deregister the current database server (conditional) 

 sqlplus apps/[APPS password]
SQL> exec fnd_conc_clone.setup_clean;



8. Implement and run AutoConfig 

See Using AutoConfig to Manage System Configurations in Oracle E-Business Suite Release 12 on My Oracle Support,
 especially section 3.2, for instructions on how to implement and run AutoConfig. 


Go back to Linux (target) server.

cd /home/oracle/tls/migratedb/PPMDEBIZ/DBA_FILES

cp appsutil.zip $ORACLE_HOME/appsutil.zip

cd $ORACLE_HOME

unzip -o appsutil.zip



cd $ORACLE_HOME/appsutil/bin

Generate the Database Context File
Execute the following command to create your Database Context File: 



cd $ORACLE_HOME/appsutil/bin/



export DISPLAY=localhost:0

export TNS_ADMIN=/orahome/u01/app/oracle/product/12.1.0.2.160719/db_1/network/admin

perl adbldxml.pl 


--> apps
--> xorinfdbw1d
--> 1551
--> PPMDEBIZ




File generated under: /orahome/u01/app/oracle/product/12.1.0.2.160719/db_1/appsutil/PPMDEBIZ_xorinfdbw1d.xml

Run AutoConfig on the Database tier





cd $ORACLE_HOME/dbs



cd $ORACLE_HOME/network/admin
backupa listener, tnsnames.r ans seln net.ora

-- To avoid ORA-12705: Cannot access NLS data files or invalid environment specified

--Doc ID 2165613.1
Run the following script after taking a backup:


 perl $ORACLE_HOME/nls/data/old/cr9idata.pl 


Once the scripts complete, confirm that the data is corrected.

$ORACLE_HOME/nls/data/9idata

ls -ltr



cd $ORACLE_HOME/appsutil/bin/
./adconfig.sh contextfile=/orahome/u01/app/oracle/product/12.1.0.2.160719/db_1/appsutil/PPMDEBIZ_xorinfdbw1d.xml 

--> apps


--Check for errors
cd /orahome/u01/app/oracle/product/12.1.0.2.160719/db_1/appsutil/log









--AUtoconfi will overlay listener.ora, tnsnames.ora and slqnet.ora
-- Restore from saved version

cd $ORACLE_HOME/network/admin

cp listener.ora.20161018 listener.ora
cp tnsnames.ora.20161018 tnsnames.ora 
cp sqlnet.ora.20161018 sqlnet.ora





9. Apply post-import WMS patches (conditional) 

If the source database is 10g or 11g, apply the following patches: 
?Patch 8796558 
?Patch 14356466 for E-Business Suite Release 12.0 or Patch 18039691 for E-Business Suite Release 12.1 

10. Re-create custom database links (conditional) 

sqlplus apps




select * from global_name@APPS_TO_APPS


-- Add to server tnsnames.ora
PPMDEBIZ,PPMDEBIZ.WORLD  =
  (DESCRIPTION =
    (ADDRESS = (PROTOCOL = TCP)(HOST = xorinfdbw1d.aetna.com)(PORT = 1551))
    (CONNECT_DATA =
      (SERVER = DEDICATED)
      (SERVICE_NAME =  PPMDEBIZ)
    )
  )


--Modify sqlnet.ora
#NAMES.DIRECTORY_PATH= (LDAP, TNSNAMES)
NAMES.DIRECTORY_PATH= (TNSNAMES)





Run the $AD_TOP/patch/115/sql/adctxpkg.sql to get the object loaded.
AD_CTX_DDL.Optlevel_Full








'DBMS_SYSTEM.READ_EV' must be declared




11. Create ConText and AZ objects 

   Skip for now


12. Import tables with XML type columns into the target database (conditional) 

n/a

13.Populate CTXSYS.DR$SQE table 

sqlplus apps
exec icx_cat_sqe_pvt.sync_sqes_for_all_zones;



14. Compile invalid objects 


@?/rdbms/admin/utlrp.sql


select count(*)
from dba_objects
where status = 'INVALID';

33


15. Re-create XLA packages (conditional)

  Skip for now


--- Following Steps should be completed by EAE-----------------------------------


16.  	Run AutoConfig on administration server node 
 
  On the administration server node, run AutoConfig by using the following command: 
  $INST_TOP/admin/scripts/adautocfg.sh


17. 	Maintain Applications database objects 
  Run AD Administration on the administration server node. From the Maintain Applications Database Objects menu, perform the following tasks: 
 a.	Compile flexfield data in AOL tables 
 b.	Recreate grants and synonyms for APPS schema 

18.	Start Applications server processes 
    Start all the server processes on the Applications system. You can allow users to access the system at this time. 
19	Create DQM indexes 

  Create DQM indexes by following these steps: 
 a.	Log on to Oracle Applications with the "Trading Community Manager" responsibility 
 b.	Click Control > Request > Run 
 c.	Select "Single Request" option 
 d.	Enter "DQM Staging Program" name 
 e.	Enter the following parameters: 
 ?	Number of Parallel Staging Workers: 4 
 ?	Staging Command: CREATE_INDEXES 
?	Continue Previous Execution: NO 
?	Index Creation: SERIAL 
f.	Click "Submit" 



*********************************************************************************************
*********************************************************************************************
*********************************************************************************************



---------------- Post Migration Cleanup ****************


1.  -- Put database in archivelog mode

    cd $HOME/tls

    sqlplus / as sysdba

    @start_archive.sql




2.  -- run stats since they were excluded from export

    cd $HOME/tls/migratedb/PPMDEBIZ

    sqlplus / as sysdba

    exec dbms_stats.set_global_prefs(pname=>'NO_INVALIDATE',pvalue=>'FALSE');
    select  dbms_stats.get_param('NO_INVALIDATE') from dual;

    select dbms_stats.get_param('DEGREE') from dual; 
    exec DBMS_STATS.SET_PARAM('DEGREE','2'); 
    exit

    cd /home/oracle/tls/analyze

    nohup ./analyze_auto.ksh PPMDEBIZ &


	
sqlplus / as sysdba
select client_name,window_group,status from dba_autotask_client;

---if auto optimizer stats collection  returns DISABLED do following


BEGIN
  DBMS_AUTO_TASK_ADMIN.ENABLE(
    client_name => 'auto optimizer stats collection', 
    operation => NULL, 
    window_name => NULL);
  END;
/






3. -- Move aud$ back to tablespace AUDIT_SPACE

    truncate table sys.aud$;

    BEGIN
     dbms_audit_mgmt.set_audit_trail_location(
     audit_trail_type => dbms_audit_mgmt.audit_trail_db_std,
     audit_trail_location_value => 'AUDIT_SPACE');
    END;
    /


4--  Initialize the audit cleanup

    BEGIN
    DBMS_AUDIT_MGMT.INIT_CLEANUP(
    audit_trail_type          => DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD,
    default_cleanup_interval  => 24 /* hours */);
    END;
    /


    Run following to confirm all is well:

    BEGIN DBMS_AUDIT_MGMT.SET_LAST_ARCHIVE_TIMESTAMP(AUDIT_TRAIL_TYPE =>
 DBMS_AUDIT_MGMT.AUDIT_TRAIL_AUD_STD, LAST_ARCHIVE_TIME => sysdate-30);
    END;
    /
    
    BEGIN DBMS_AUDIT_MGMT.CLEAN_AUDIT_TRAIL(1, TRUE, 1);
    END;
    /



5 -- Alter all profiles using function AI_PASSWORD_VALIDATE to use new function AI_PASSWORD_VALIDATE_V2

    sqlplus / as sysdba

    ALTER PROFILE EXPIRE_DBA_PWD LIMIT 
PASSWORD_VERIFY_FUNCTION AI_PASSWORD_VALIDATE_V2
;
    ALTER PROFILE EXPIRE_USER_PWD LIMIT 
PASSWORD_VERIFY_FUNCTION AI_PASSWORD_VALIDATE_V2
;
    ALTER PROFILE NOEXPIRE_USER_PWD LIMIT 
PASSWORD_VERIFY_FUNCTION AI_PASSWORD_VALIDATE_V2
;

CREATE PROFILE STANDARD
    LIMIT SESSIONS_PER_USER         DEFAULT
          CPU_PER_SESSION           DEFAULT
          CPU_PER_CALL              DEFAULT
          CONNECT_TIME              DEFAULT
          IDLE_TIME                 DEFAULT
          LOGICAL_READS_PER_SESSION DEFAULT
          LOGICAL_READS_PER_CALL    DEFAULT
          COMPOSITE_LIMIT           DEFAULT
          PRIVATE_SGA               DEFAULT
          FAILED_LOGIN_ATTEMPTS     5
          PASSWORD_LIFE_TIME        80
          PASSWORD_REUSE_TIME       390
          PASSWORD_REUSE_MAX        24
          PASSWORD_LOCK_TIME        .0034
          PASSWORD_GRACE_TIME       10
          PASSWORD_VERIFY_FUNCTION  AI_PASSWORD_VALIDATE_V2
                                    
/              




6. See Audit_changes.txt to change profiles

7. Upgrade catalog and register database to RCATDEV

    rman
    rman => connect target /
    rman => connect catalog PPMDEBIZ/PPMDEBIZnamr@RCATDEV
    rman => upgrade catalog;
    rman => upgrade catalog;
    rman => register database;


8. Take a database backup

    cd /orahome/u01/app/oracle/local/scripts/backup

    nohup rman_backup_ppm.ksh PPMDEBIZ RCATDEV incremental_level0_backup_tape_ppm.rman Y &


9. End OEM Blackout


10. Shutdown AIX Database