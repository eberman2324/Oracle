Hi Eugene,

Sorry for the delay.  Here is what I used for 90% of the reorg.  I had something fancier that ran the redefinition in parallel however it would fail anytime the finish redefinition executed concurrently such as when the workers picked up smaller tables.  I could make a parallel redefinition work but will require more work.  

I did most of the reorg serially using the following scripts.

Update the worktable.sql script and set the tablespace you wish to reorg from in the query.  Its currently set to DATA.  You can also use an IN statement to specify all the data tablespaces.

Update the run_redef.sql script.  Set the table_part_tablespace and lob_tablespace to your data tablespace and index_tablespace to your index tablespace.

We reorg everything into a single set of tablespaces, PROD_DATA and PROD_INDX.

Let me know if you have any questions or run into any issues.

Thanks


BEFORE
MOUNT_STATUS HEADER_STATUS       OS_MB   TOTAL_MB    FREE_MB SECTOR_SIZE LOGICAL_SECTOR_SIZE Name               Label        Path
------------ -------------- ---------- ---------- ---------- ----------- ------------------- ------------------ ------------ ---------
CACHED       MEMBER            3276800    3276800     271652         512                 512 VOLDAT01           VOLDAT01     /dev/ora1
CACHED       MEMBER            3276800    3276800     271464         512                 512 VOLDAT02           VOLDAT02     /dev/ora2
CACHED       MEMBER            3276800    3276800     271572         512                 512 VOLDAT03           VOLDAT03     /dev/ora3
CACHED       MEMBER            3276800    3276800     271496         512                 512 VOLDAT04           VOLDAT04     /dev/ora4
CACHED       MEMBER            3276800    3276800     271636         512                 512 VOLDAT05           VOLDAT05     /dev/ora5
CACHED       MEMBER            3276800    3276800     271572         512                 512 VOLDAT06           VOLDAT06     /dev/ora6
CACHED       MEMBER            3276800    3276800     271604         512                 512 VOLDAT07           VOLDAT07     /dev/ora7
CACHED       MEMBER            3276800    3276800     271584         512                 512 VOLDAT08           VOLDAT08     /dev/ora8
CACHED       MEMBER            3276800    3276800     271456         512                 512 DATA_01_0008       VOLDAT09     /dev/ora9
CACHED       MEMBER            3276800    3276800     271656         512                 512 DATA_01_0009       VOLDAT10     /dev/ora0
CACHED       MEMBER            3276800    3276800     271524         512                 512 DATA_01_0010       VOLDAT11     /dev/ora1
CACHED       MEMBER            3276800    3276800     271540         512                 512 DATA_01_0011       VOLDAT12     /dev/ora2
CACHED       MEMBER            3276800    3276800     271540         512                 512 DATA_01_0012       VOLDAT13     /dev/ora3
CACHED       MEMBER            3276800    3276800     271516         512                 512 DATA_01_0013       VOLDAT14     /dev/ora4

3.8 TB Free

CACHED       MEMBER            3276800    3276800    1036768         512                 512 IND_01_0003        VOLIND01     /dev/ora1
CACHED       MEMBER            3276800    3276800    1036768         512                 512 IND_01_0007        VOLIND02     /dev/ora2
CACHED       MEMBER            3276800    3276800    1036764         512                 512 IND_01_0002        VOLIND03     /dev/ora3
CACHED       MEMBER            3276800    3276800    1036764         512                 512 IND_01_0006        VOLIND04     /dev/ora4
CACHED       MEMBER            3276800    3276800    1036752         512                 512 IND_01_0001        VOLIND05     /dev/ora5
CACHED       MEMBER            3276800    3276800    1036764         512                 512 IND_01_0004        VOLIND06     /dev/ora6
CACHED       MEMBER            3276800    3276800    1036756         512                 512 IND_01_0000        VOLIND07     /dev/ora7
CACHED       MEMBER            3276800    3276800    1036764         512                 512 IND_01_0005        VOLIND08     /dev/ora8

8.2 TB Free


Total Database Space: 62,032,392

-- Move to archivelog  mode
shutdown immediate;
startup mount;
alter database archivelog;
alter database open;
archive log list;


-- Level 0 backup outside of OEM. 

cd $HOME/tls/rman

nohup backup_hepymask_aft_mask.sh HEPYMASK backup_hepymask_aft_mask.rman

-- Move to noarchivelog 

shutdown immediate;
startup mount;
alter database noarchivelog;
alter database open;
archive log list;


1. Create PROD_DATA and PROD_INDEX (Big file tablespaces)

PROD_DATA - 3 TB
PROD_INDEX - 5 TB


CREATE BIGFILE TABLESPACE PROD_DATA
    DATAFILE '+DATA_01' SIZE 1000G AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE
    FLASHBACK ON
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/

CREATE BIGFILE TABLESPACE PROD_INDEX
    DATAFILE '+IND_01' SIZE 1000G AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE
    FLASHBACK ON
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/

ALTER USER PROD QUOTA UNLIMITED ON PROD_DATA;
ALTER USER PROD QUOTA UNLIMITED ON PROD_INDEX;

ALTER USER HE_CUSTOM QUOTA UNLIMITED ON PROD_DATA;
ALTER USER HE_CUSTOM QUOTA UNLIMITED ON PROD_INDEX;


ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 2000G
/



ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 2000G
/


ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 2500G
/



select * from prod.WORKTABLE order by 3 desc 
-- Manual DryRun with small table

PROD.DEPARTMENT


EXEC DBMS_REDEFINITION.REDEF_TABLE(uname => 'PROD',tname => 'TRANSIENT_PRACTITIONER_ID',table_part_tablespace => 'PROD_DATA',index_tablespace => 'PROD_INDEX',lob_tablespace => 'PROD_DATA');


EXEC DBMS_REDEFINITION.REDEF_TABLE(uname => 'PROD',tname => 'BILL_LN_X_RECONCILIATION_LINES',table_part_tablespace => 'PROD_DATA',index_tablespace => 'PROD_INDEX',lob_tablespace => 'PROD_DATA');
                                     
            EXEC DBMS_REDEFINITION.REDEF_TABLE(uname => 'HE_CUSTOM',tname => 'HIC_COMPLIANCE_PROGRAM',table_part_tablespace => 'PROD_DATA',index_tablespace => 'PROD_INDEX',lob_tablespace => 'PROD_DATA');                        
                                     
                                    


--Manual DryRun with bigger table

PROD.CREDENTIALING

nohup redef.sh HEPYMASK > redef.stdout 2>&1 &

-- Create .sh wrapper to run .nohup

Resize to 

select * from dba_segments where tablespace_name IN ( 'DATA3','INDX3')


SEGMENT_NAME
CVC_INSTANCE_CONTEXT
CVC_INSTANCE_CONTEXT_AEDBA_5
CVC_INST_CONTEXT
FK_CVC_I_ONTEXT_CVC_INS_NTEXT
FK_CVC_INST_CONTEXT_CVC_STEP
FK_CVC_I_NTEXT_CVC_FAI_DETAIL
FK_CVC_I_NTEXT_CVC_WRK_OGRESS
CONTEXT_PARENT_STATE_IDX
CVC_ID_TRIGGER_TIME
CVC_OWNER_TYPE_OPS_STATE_TXT
ALTI_CVC_INSTANCE_LAST_TX_DT
ALTI_CVC_INSTANCE_SYSTEM_DOM
ALTI_CVC_LATEST_ID_STRING
ALTI_CVC_LATEST_ID_LONG
CVC_CVC_TYPE
CVC_ID_VER_ENDOR
CVC_CTXT_IDX
CVC_LATES_ENDOR_EFF
CVC_LATEST_ID_TYPE_TXT
CVC_CNTX_HCC_ID_UPPER
CVC_UPPER_TYPE_TXT
TENANTID_CVC_INSTANCE_CONTEXT
ALTI_CVC_INSTANCE_STATE_TXT
CVC_INSTANCE_CONTEXT_AEDBA_1
CVC_INSTANCE_CONTEXT_AEDBA_2
CVC_INSTANCE_CONTEXT_AEDBA_3


DROP TABLESPACE DATA3 INCLUDING CONTENTS AND DATAFILES
/


DROP TABLESPACE INDX3 INCLUDING CONTENTS AND DATAFILES
/

DATA_01 = 4 T free
INDX_01 = 8 T free

Total Database size: 59,694,600

select * from dba_segments where tablespace_name IN ( 'DATA2','INDX2')


nohup redef.sh HEPYMASK > redef.stdout 2>&1 &


CVC_STEP
	TENANTID_CVC_STEP
	START_TIME_CVC_STEP_LATEST_ID
	CVC_STEP
	FK_CVC_STEP_CVC_INST_CONTEXT
	FK_CVC_STEP_CVC_STEP
	FK_CVC_STEP_CVC_FAILURE_DETAIL
	STEP_CONTEXT_ID
	STEP_ACTIVE_ID
	STEP_ACTIVE_LAST_DT
	STEP_ACTIVE_STATE_TXT
	STEP_ACTIVE_LTST_TYP_NM
	STEP_LATEST_ID_TYPE
	STEP_ACTIVE_OPS
	CVC_STEP_TYPE_ID_ACTIVE
	CVC_STEP_LATEST_ID_TYPE_TXT
	CVC_STEP_HCC_ID_UPPER
	STEP_END_TIME


ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 3000G
/
ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 4000G
/
ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 4500G
/



ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 3500G
/
ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 4500G
/
ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 5500G
/

ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 6000G
/


select * from dba_segments where tablespace_name IN ( 'DATA5','INDX5')

0

DROP TABLESPACE INDX5 INCLUDING CONTENTS AND DATAFILES
/
DROP TABLESPACE DATA5 INCLUDING CONTENTS AND DATAFILES
/


select table_name, table_size from dba_segments ,PROD.WORKTABLE where segment_name = table_name and  tablespace_name IN ( 'DATA4') and segment_type = 'TABLE';


select * from PROD.WORKTABLE 



select * from dba_segments where tablespace_name IN ( 'DATA4','INDX4')





select table_name from dba_segments ,PROD.WORKTABLE where segment_name = table_name and  tablespace_name IN ('DATA4') and segment_type = 'TABLE';

select table_name, table_size from dba_segments ,PROD.WORKTABLE where segment_name = table_name and  tablespace_name IN ('DATA') and segment_type = 'TABLE' order by 2 desc

PRACTITIONER_MEMBER		660.025390625
OPS_VALUE_REFERENCE		489.119140625
FEE_DETAIL			350.1845703125
IDENTIFICATION_NUMBER		345.869140625
MESSAGE_CODE			293.5029296875
POSTAL_ADDRESS			180.8828125
SUPPLIER_X_SUPPLIER_CLASS_TYPE	142.9501953125


ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 8500G
/

ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 8800G
/



select * from dba_segments where tablespace_name IN ( 'DATA4','INDX4')


SEGMENT_NAME

BANK_ENDOR_ID
PAYMENT_STATUS_HISTORY_AEDBA_1
POSTAL_ADDRESS_ID
CLAIM_RECEIVABLE_AEDBA_2
SUPPLIER_END_DT
SUPP_EXP_ID
FK_ORGANIZATION_TAX_ID
IDENT_VER_ID
NEW_REC_ID
PAYABLE_AEDBA_1
SUPP_ENDOR_ID
SUPP_DATE_ID
SUPPLIER_EXP_ID






ALTER INDEX PROD.IDENT_VER_ID REBUILD NOLOGGING PARALLEL 4 TABLESPACE PROD_INDEX;
ALTER INDEX PROD.IDENT_VER_ID LOGGING NOPARALLEL;

...

select * from dba_segments where tablespace_name IN ( 'DATA4','INDX4')




** Find largerst indexes that still out there and rebuild with parallel 

select segment_name, segment_type, s.bytes/1024/1024/1024 GB, s.tablespace_name TS
from dba_segments s,
     dba_indexes i
where s.segment_name = i.index_name
and   s.owner        = i.owner
--and   i.table_name   = 'IDENTIFICATION_NUMBER'
and s.tablespace_name <> 'PROD_INDEX' 
and   s.segment_type = 'INDEX'
and   s.owner        = 'PROD'
order by 3 desc;


PRACT_MBR - PRACTITIONER_MEMBER	
FK_PR_MBR_NAMED_PRV_GROUPING - PRACTITIONER_MEMBER
FK_PRACT_MBR_PRACT - PRACTITIONER_MEMBER	
PRACTITIONER_MEMBER_AEDBA_1 - - PRACTITIONER_MEMBER	

ID_NUM_NOUPPER_NBR - IDENTIFICATION_NUMBER	
ID_NUM_UPPER_NBR - IDENTIFICATION_NUMBER	
IDENT_NBR - IDENTIFICATION_NUMBER
FK_IDENT_NBR_CD_ENTRY - IDENTIFICATION_NUMBER	

VIDDATES_FEE_DETAIL - FEE_DETAIL	
FEE_TABLE_SERV_CD - - FEE_DETAIL	
FEE_TABLE_REV_CD - - FEE_DETAIL	
FEE_TABLE_UPPER_SERV_CD	 - FEE_DETAIL
PKDATES_FEE_DETAIL  - - FEE_DETAIL	

VER_ID_ADDR_ZIP_AEDBA_1	 - POSTAL_ADDRESS
ADDR_ZIP_UP_IDX	- POSTAL_ADDRESS


FK_SPPLR_X_SP_CLASS_TYPE_SPP	 - SUPPLIER_X_SUPPLIER_CLASS_TYPE
SPPLR_X_SPPLR_CLASS_TYPE	


FK_OPS_VAL_REF_CVC_STEP	 - OPS_VALUE_REFERENCE
OPS_VAL_REF	- OPS_VALUE_REFERENCE




ALTER INDEX PROD.PRACT_MBR REBUILD NOLOGGING PARALLEL 6 TABLESPACE PROD_INDEX;
ALTER INDEX PROD.PRACT_MBR LOGGING NOPARALLEL;




DROP TABLESPACE DATA4 INCLUDING CONTENTS AND DATAFILES
/

DROP TABLESPACE INDX4 INCLUDING CONTENTS AND DATAFILES
/


ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 8500G
/
ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 9500G
/
ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 10500G
/

ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 11500G
/


ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 12000G
/

nohup redef_rebuilds.sh HEPYMASK > redef_rebuilds.stdout 2>&1 &





ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 9500G
/


ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 10500G
/


ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 11500G
/

** Move tables and their indexes. Same tables that we moved large indexes prior to that

PRACT_MBR - PRACTITIONER_MEMBER	
FK_PR_MBR_NAMED_PRV_GROUPING - PRACTITIONER_MEMBER
FK_PRACT_MBR_PRACT - PRACTITIONER_MEMBER	
PRACTITIONER_MEMBER_AEDBA_1 - - PRACTITIONER_MEMBER	

ID_NUM_NOUPPER_NBR - IDENTIFICATION_NUMBER	
ID_NUM_UPPER_NBR - IDENTIFICATION_NUMBER	
IDENT_NBR - IDENTIFICATION_NUMBER
FK_IDENT_NBR_CD_ENTRY - IDENTIFICATION_NUMBER	

VIDDATES_FEE_DETAIL - FEE_DETAIL	
FEE_TABLE_SERV_CD - - FEE_DETAIL	
FEE_TABLE_REV_CD - - FEE_DETAIL	
FEE_TABLE_UPPER_SERV_CD	 - FEE_DETAIL
PKDATES_FEE_DETAIL  - - FEE_DETAIL	

VER_ID_ADDR_ZIP_AEDBA_1	 - POSTAL_ADDRESS
ADDR_ZIP_UP_IDX	- POSTAL_ADDRESS


FK_SPPLR_X_SP_CLASS_TYPE_SPP	 - SUPPLIER_X_SUPPLIER_CLASS_TYPE
SPPLR_X_SPPLR_CLASS_TYPE	


FK_OPS_VAL_REF_CVC_STEP	 - OPS_VALUE_REFERENCE
OPS_VAL_REF	- OPS_VALUE_REFERENCE





CREATE BIGFILE TABLESPACE PROD_DATA2
    DATAFILE '+IND_01' SIZE 1000G AUTOEXTEND OFF
    EXTENT MANAGEMENT LOCAL AUTOALLOCATE
    FLASHBACK ON
    LOGGING
    ONLINE
    SEGMENT SPACE MANAGEMENT AUTO
/

ALTER USER PROD QUOTA UNLIMITED ON PROD_DATA2;


ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data2.257.1100606455' RESIZE 2000G
/
ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data2.257.1100606455' RESIZE 2200G
/

ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data2.257.1100606455' RESIZE 2300G
/

ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data2.257.1100606455' RESIZE 2400G
/


!!! Resize PROD_INDEX need about 5 T free

ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 13000G
/

ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 14000G
/

ALTER DATABASE
DATAFILE '+IND_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_index.260.1099469055' RESIZE 15000G
/


nohup redef_rebuilds_2.sh HEPYMASK > redef_rebuilds_2.stdout 2>&1 &


select table_name from dba_segments ,PROD.WORKTABLE where segment_name = table_name and tablespace_name IN ('DATA') and  table_name in ('PRACTITIONER_MEMBER','OPS_VALUE_REFERENCE','FEE_DETAIL','IDENTIFICATION_NUMBER');

select table_name from dba_segments ,PROD.WORKTABLE where segment_name = table_name and tablespace_name IN ('DATA') 


select count(*) from dba_segments  where TABLESPACE_NAME = ('INDX') 
HEPYQA2 - 4679

HEPYMASK - 4550
           4499
           4359
	   4208
           4039
           3975

select table_name, table_size from dba_segments ,PROD.WORKTABLE where segment_name = table_name and tablespace_name IN ('DATA') order by 2 desc
1237
1220
select * from PROD.WORKTABLE


ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 12500G
/



ALTER DATABASE
DATAFILE '+DATA_01/HEPYMASK_XHEPYDBM21Q/DATAFILE/prod_data.1142.1099467953' RESIZE 14000G
/


nohup redef.sh HEPYMASK > redef.stdout 2>&1 &


select * from dba_segments where tablespace_name IN ( 'DATA','INDX')


--- to monitor progress
select     SID,
            SERIAL#,
            OPNAME,
            START_TIME,
            TOTALWORK,
            sofar,
            ROUND((sofar/totalwork) * 100,2) pct_done,
            sysdate + TIME_REMAINING/3600/24 end_time, MESSAGE
from   v$session_longops
where  
     TOTALWORK != 0
  AND SOFAR  != TOTALWORK
;
select table_name, table_size from dba_segments ,PROD.WORKTABLE where segment_name = table_name and tablespace_name IN ('DATA') order by 2 desc

select count(*) from dba_segments ,PROD.WORKTABLE where segment_name = table_name and tablespace_name IN ('DATA')

select count(*)  from all_tables where tablespace_name = 'DATA' and owner = 'PROD'


--DELETE from PROD.WORKTABLE where table_name = 'TRANSIENT_PRACTITIONER_ID'
--commit;

DELETE from PROD.WORKTABLE where table_name = 'TRANSIENT_SUPPLIER_LOCATION_ID'
commit;

DELETE from PROD.WORKTABLE where table_name = 'TRANSIENT_SUPPLIER_ID'
commit;



ALTER TABLE PROD.TRANSIENT_PRACTITIONER_ID MOVE TABLESPACE PROD_DATA2 NOLOGGING PARALLEL 2;
ALTER TABLE PROD.TRANSIENT_PRACTITIONER_ID LOGGING NOPARALLEL;


ALTER INDEX PROD.TRAN_PRACTITIONER_ID REBUILD NOLOGGING PARALLEL 2 TABLESPACE PROD_INDEX;
ALTER INDEX PROD.TRAN_PRACTITIONER_ID LOGGING NOPARALLEL;

ALTER TABLE PROD.TRANSIENT_SUPPLIER_LOCATION_ID MOVE TABLESPACE PROD_DATA2 NOLOGGING PARALLEL 2;
ALTER TABLE PROD.TRANSIENT_SUPPLIER_LOCATION_ID LOGGING NOPARALLEL;

ALTER INDEX PROD.TRAN_SUPPLIER_LOC_ID REBUILD NOLOGGING PARALLEL 2 TABLESPACE PROD_INDEX;
ALTER INDEX PROD.TRAN_SUPPLIER_LOC_ID LOGGING NOPARALLEL;


ALTER TABLE PROD.TRANSIENT_SUPPLIER_ID MOVE TABLESPACE PROD_DATA2 NOLOGGING PARALLEL 2;
ALTER TABLE PROD.TRANSIENT_SUPPLIER_ID LOGGING NOPARALLEL;

ALTER INDEX PROD.TRAN_SUPPLIER_ID REBUILD NOLOGGING PARALLEL 2 TABLESPACE PROD_INDEX;
ALTER INDEX PROD.TRAN_SUPPLIER_ID LOGGING NOPARALLEL;



select * from dba_segments where tablespace_name IN ( 'DATA','INDX')


PREM_SUBSIDY_LN
FK_PREM_SUBSIDY_LN_MBRSHP
FK_PREM_SUBSIDY_LN_SUBSCRP
FK_PREM_IDY_LN_OTHR_BIL_PIENT
FK_PREM_SIDY_LN_SUBSIDY_TAILS
FK_PREM_S_SIDY_LN_PREM_P_ABLE
FK_P_LN_SUBS_LS_RECEIV_TAILS
FK_PREM_SIDY_LN_PREM_RE_VABLE
FK_PREM_DY_LN_PREM_ABLE_PAY_E
FK_PRE_Y_LN_PREM_ABLE_REC_LE
TENANTID_PREM_SUBSIDY_LN
FK_PREM_SUBSIDY_LN_ACCT
FK_PREM_SUBSIDY_LN_ACCT_ACCT
FK_PREM_SUBSIDY_LN_BNFT_PLAN
FK_PREM_SUBSIDY_LN_CD_ENTRY
FK_PREMIUM_SUBSIDY_LINE_BILL
PREM_BILL_LN
FK_PREM_BILL_LN_SUBSCRP
FK_PREM_BILL_LN_MBRSHP
FK_PREM_ILL_LN_MBR_P_PRMRY_BR
FK_PREM_BILL_LN_COV_TIER
FK_PREM_BILL_LN_COV_TIER_SET
FK_PREMIUM_BILL_LINE_COUNTY
FK_PREMIUM_BILL_LINE_ZIP
FK_PREM_BILL_LN_COUNTY_COUNTY
FK_PREMIUM_BILL_LINE_ZIP_ZIP
FK_PREM_BILL_LN_BNFT_NETWRK
FK_PREM_BILL_LN_CONSLTD_CLM
FK_PREM_BILL_LN_PREM_PAYABLE
FK_PREM_ILL_LN_PREM_REC_VABLE
FK_PREMIUM_BILL_LINE_BILL
TENANTID_PREM_BILL_LN
FK_PREMIUM_BILL_LINE_ACCOUNT
FK_PREM_BILL_LN_ACCT_ACCT
FK_PREM_BILL_LN_BNFT_PLAN
FK_PREM_BILL_LN_CD_ENTRY



nohup redef_rebuilds_3.sh HEPYMASK > redef_rebuilds_3.stdout 2>&1 &

SEGMENT_NAME
HIC_ACCUMULATOR_DETAILS
HIC_CLAIM_ACCUMULATOR
HIC_EVENT
HIC_ON_DEMAND_ACKNOWLEDGMENT
HIC_ON_DEMAND_REQUEST_EVENT
HIC_PUBLISHED_ACCUMULATOR
HIC_PUBLISHED_EVENT
HIC_SRC_TRGT_MAPPING
HIC_CVC_EVENT


EXEC DBMS_REDEFINITION.REDEF_TABLE(uname => 'HE_CUSTOM',tname => 'HIC_ON_DEMAND_ACKNOWLEDGMENT',table_part_tablespace => 'PROD_DATA',index_tablespace => 'PROD_INDEX',lob_tablespace => 'PROD_DATA');



nohup redef_rebuilds_4.sh HEPYMASK > redef_rebuilds_4.stdout 2>&1 &

ps -ef | grep redef_rebuilds_4.sh


DROP TABLESPACE DATA INCLUDING CONTENTS AND DATAFILES
/
DROP TABLESPACE INDX INCLUDING CONTENTS AND DATAFILES
/


select * from dba_segments where tablespace_name IN ('DATA')
ORA-02429: cannot drop index used for enforcement of unique/primary key

select table_name  from all_tables where tablespace_name = 'DATA' and owner = 'PROD'

nohup redef_1.sh HEPYMASK > redef_1.stdout 2>&1 &



****  notes for next time ****

1. Start with DATA2/INDX2, DATA3/INDX3 - by CVC tables move and rebuild indexes.
2. Take care DATA5/INDX5 with redefine
3. Identify largest tables from DATA4 - by tables move and rebuild indexes
   Tak care rest of DATA4 with redefine
5. Indentify largest tables from DATA-  by tables move and rebuild indexes (include TRANSIENT tables)
   Take care rest of DATA with redefine
6. Take HE_CUSTOM and some tables that did not make into workable table list. select * from dba_segments where tablespace_name IN ('DATA')
   
