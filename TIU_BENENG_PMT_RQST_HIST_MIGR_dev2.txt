CREATE OR REPLACE TRIGGER BENENG.TIU_BENENG_PMT_RQST_HIST_MIGR
BEFORE DELETE OR INSERT OR UPDATE
ON BENENG.BENENG_PAYMENT_RQST_HIST
REFERENCING OLD AS OLD NEW AS NEW
FOR EACH ROW
DECLARE
    statusCount   NUMBER := 0;
BEGIN
    IF INSERTING
    THEN
        SELECT COUNT (mc.COMPANY_ID)
          INTO statusCount
          FROM WKAB10.Z_MIGR_CONTROL mc
         WHERE     mc.CTRL_PRCSS_CD IN ('P', 'C')
               AND mc.COMPANY_ID IN
                       (SELECT te.COMPANY_ID
                          FROM WKAB10.t_employee te
                         WHERE te.EMPLOYEE_ID IN
                                   (SELECT dc.EMPLOYEE_ID
                                      FROM WKAB10.t_dis_claim dc
                                     WHERE TO_CHAR (dc.CLAIM_ID) =
                                           TO_CHAR (:NEW.CLAIM_NO)));
    END IF;

    IF DELETING OR UPDATING
    THEN
        SELECT COUNT (mc.COMPANY_ID)
          INTO statusCount
          FROM WKAB10.Z_MIGR_CONTROL mc
         WHERE     mc.CTRL_PRCSS_CD IN ('P', 'C')
               AND mc.COMPANY_ID IN
                       (SELECT te.COMPANY_ID
                          FROM WKAB10.t_employee te
                         WHERE te.EMPLOYEE_ID IN
                                   (SELECT dc.EMPLOYEE_ID
                                      FROM WKAB10.t_dis_claim dc
                                     WHERE TO_CHAR (dc.CLAIM_ID) =
                                           TO_CHAR (:OLD.CLAIM_NO)));
    END IF;

    IF statusCount > 0
    THEN
        --stop to insert data
        IF INSERTING OR DELETING
        THEN
            raise_application_error (
                -20000,
                'Not allowed to insert/delete for migrated client');
        END IF;

        --stop to update data
        IF UPDATING
        THEN
            :NEW.PAY_REQ_ID := :OLD.PAY_REQ_ID;
            :NEW.RTW_ID := :OLD.RTW_ID;
            :NEW.RTW_FROM_DT := :OLD.RTW_FROM_DT;
            :NEW.RTW_THROUGH_DT := :OLD.RTW_THROUGH_DT;
            :NEW.PAY_FROM_DT := :OLD.PAY_FROM_DT;
            :NEW.PAY_THROUGH_DT := :OLD.PAY_THROUGH_DT;
            :NEW.EMPLID := :OLD.EMPLID;
            :NEW.CLAIM_NO := :OLD.CLAIM_NO;
            :NEW.RTW_GROUP := :OLD.RTW_GROUP;
            :NEW.COV_CATG := :OLD.COV_CATG;
            :NEW.PLAN_TYPE := :OLD.PLAN_TYPE;
            :NEW.VERSION := :OLD.VERSION;
            :NEW.DEPTID := :OLD.DEPTID;
            :NEW.STATE := :OLD.STATE;
            :NEW.RECORD_CD := :OLD.RECORD_CD;
            :NEW.DAYS_PAID := :OLD.DAYS_PAID;
            :NEW.GROSS_PAY := :OLD.GROSS_PAY;
            :NEW.GROSS_BEN_DLY_RT := :OLD.GROSS_BEN_DLY_RT;
            :NEW.MIN_NET_BEN := :OLD.MIN_NET_BEN;
            :NEW.NET_BEN_AFTER_OFFSETS := :OLD.NET_BEN_AFTER_OFFSETS;
            :NEW.EFF_STATUS := :OLD.EFF_STATUS;
            :NEW.IMMEDIATE_PAY := :OLD.IMMEDIATE_PAY;
            :NEW.PS_COMPANY := :OLD.PS_COMPANY;
            :NEW.PS_PAYGROUP := :OLD.PS_PAYGROUP;
            :NEW.TEMP_STATUS_FLAG := :OLD.TEMP_STATUS_FLAG;
            :NEW.STATUS_DT_TIME := :OLD.STATUS_DT_TIME;
            :NEW.STATUS_USER_ID := :OLD.STATUS_USER_ID;
            :NEW.BENEFIT_SALARY := :OLD.BENEFIT_SALARY;
            :NEW.RETRO_EP_DAYS := :OLD.RETRO_EP_DAYS;
            :NEW.ALT_PAY_PERIOD := :OLD.ALT_PAY_PERIOD;
            :NEW.ALT_EIN := :OLD.ALT_EIN;
            :NEW.LOCKED_FLAG := :OLD.LOCKED_FLAG;
            :NEW.SHAREPLEX_IGNORE_IND := :OLD.SHAREPLEX_IGNORE_IND;
            :NEW.MIGR_DT := :OLD.MIGR_DT;
        END IF;
    END IF;
END;
/

***** if not valid do check and make sure **

GRANT DELETE ON WKAB10.Z_MIGR_CONTROL TO BENENG
/
GRANT INSERT ON WKAB10.Z_MIGR_CONTROL TO BENENG
/
GRANT SELECT ON WKAB10.Z_MIGR_CONTROL TO BENENG
/
GRANT UPDATE ON WKAB10.Z_MIGR_CONTROL TO BENENG
/

GRANT DELETE ON WKAB10.T_EMPLOYEE TO BENENG
/
GRANT INSERT ON WKAB10.T_EMPLOYEE TO BENENG
/
GRANT UPDATE ON WKAB10.T_EMPLOYEE TO BENENG
/
GRANT SELECT ON WKAB10.T_EMPLOYEE TO BENENG
/

GRANT DELETE ON WKAB10.T_DIS_CLAIM TO BENENG
/
GRANT INSERT ON WKAB10.T_DIS_CLAIM TO BENENG
/
GRANT UPDATE ON WKAB10.T_DIS_CLAIM TO BENENG
/
GRANT SELECT ON WKAB10.T_DIS_CLAIM TO BENENG
/



***** Latest version was deployed by me on 10/31/2019 in Dev2, QA2

CREATE OR REPLACE TRIGGER BENENG.TIU_BENENG_PMT_RQST_HIST_MIGR
  BEFORE INSERT OR UPDATE OR DELETE ON BENENG.BENENG_PAYMENT_RQST_HIST
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
DECLARE
  statusCount NUMBER := 0;
BEGIN
  IF INSERTING THEN
  
    select count(mc.COMPANY_ID)
      into statusCount
      from WKAB10.t_dis_claim dc
      join WKAB10.t_employee te
        on dc.employee_id = te.employee_id
      join WKAB10.Z_MIGR_CONTROL mc
        on te.company_id = mc.company_id
     WHERE mc.CTRL_PRCSS_CD IN ('P', 'C')
       and TO_CHAR(dc.CLAIM_ID) = TO_CHAR(:NEW.CLAIM_NO);
  
  END IF;

  IF DELETING OR UPDATING THEN
    select count(mc.COMPANY_ID)
      into statusCount
      from WKAB10.t_dis_claim dc
      join WKAB10.t_employee te
        on dc.employee_id = te.employee_id
      join WKAB10.Z_MIGR_CONTROL mc
        on te.company_id = mc.company_id
     WHERE mc.CTRL_PRCSS_CD IN ('P', 'C')
       and TO_CHAR(dc.CLAIM_ID) = TO_CHAR(:OLD.CLAIM_NO);
  END IF;

  IF statusCount > 0 THEN
    --stop to insert data
    IF INSERTING OR DELETING THEN
      raise_application_error(-20000,
                              'Not allowed to insert/delete for migrated client');
    END IF;
  
    --stop to update data
    IF UPDATING THEN
      :NEW.PAY_REQ_ID            := :OLD.PAY_REQ_ID;
      :NEW.RTW_ID                := :OLD.RTW_ID;
      :NEW.RTW_FROM_DT           := :OLD.RTW_FROM_DT;
      :NEW.RTW_THROUGH_DT        := :OLD.RTW_THROUGH_DT;
      :NEW.PAY_FROM_DT           := :OLD.PAY_FROM_DT;
      :NEW.PAY_THROUGH_DT        := :OLD.PAY_THROUGH_DT;
      :NEW.EMPLID                := :OLD.EMPLID;
      :NEW.CLAIM_NO              := :OLD.CLAIM_NO;
      :NEW.RTW_GROUP             := :OLD.RTW_GROUP;
      :NEW.COV_CATG              := :OLD.COV_CATG;
      :NEW.PLAN_TYPE             := :OLD.PLAN_TYPE;
      :NEW.VERSION               := :OLD.VERSION;
      :NEW.DEPTID                := :OLD.DEPTID;
      :NEW.STATE                 := :OLD.STATE;
      :NEW.RECORD_CD             := :OLD.RECORD_CD;
      :NEW.DAYS_PAID             := :OLD.DAYS_PAID;
      :NEW.GROSS_PAY             := :OLD.GROSS_PAY;
      :NEW.GROSS_BEN_DLY_RT      := :OLD.GROSS_BEN_DLY_RT;
      :NEW.MIN_NET_BEN           := :OLD.MIN_NET_BEN;
      :NEW.NET_BEN_AFTER_OFFSETS := :OLD.NET_BEN_AFTER_OFFSETS;
      :NEW.EFF_STATUS            := :OLD.EFF_STATUS;
      :NEW.IMMEDIATE_PAY         := :OLD.IMMEDIATE_PAY;
      :NEW.PS_COMPANY            := :OLD.PS_COMPANY;
      :NEW.PS_PAYGROUP           := :OLD.PS_PAYGROUP;
      :NEW.TEMP_STATUS_FLAG      := :OLD.TEMP_STATUS_FLAG;
      :NEW.STATUS_DT_TIME        := :OLD.STATUS_DT_TIME;
      :NEW.STATUS_USER_ID        := :OLD.STATUS_USER_ID;
      :NEW.BENEFIT_SALARY        := :OLD.BENEFIT_SALARY;
      :NEW.RETRO_EP_DAYS         := :OLD.RETRO_EP_DAYS;
      :NEW.ALT_PAY_PERIOD        := :OLD.ALT_PAY_PERIOD;
      :NEW.ALT_EIN               := :OLD.ALT_EIN;
      :NEW.LOCKED_FLAG           := :OLD.LOCKED_FLAG;
      :NEW.SHAREPLEX_IGNORE_IND  := :OLD.SHAREPLEX_IGNORE_IND;
      :NEW.MIGR_DT               := :OLD.MIGR_DT;
    END IF;
  END IF;
END;

*** wkabprod *****

beneng/bakrtmqex3p