1. Users find out that somehow table(s) were updated wrong.
2. Identify when this happend so we could locate (USE) correct .dmp file for restore
3. Suggest to restore table to different (not wkab10) schema account, so users/developers can look into this and
   maybe write some code to update production table. So we do not loose any other data.
4. Create new schema account for example: tmp_restore

   CREATE USER TMP_RESTORE IDENTIFIED BY "xxxxx"
    DEFAULT TABLESPACE SYSTEM
    TEMPORARY TABLESPACE TEMP
    PROFILE DEFAULT
    ACCOUNT LOCK
    /
    GRANT UNLIMITED TABLESPACE TO TMP_RESTORE
    /

5. Log to TSM

   #login
   dsmc

   # See what filesystems available
   q fi 

   #See if file that we need exist
   q b /aetnaprod/backup/fullwkabprod*
   q b /aetnaprod/backup1/fullwkabprod*

   q b /aetnaprod/backup/wkabprod_exp*
   q b /aetnaprod/workability/*


    q b /backup/Backup/BKP*

   q b /aetnaprod/backup1/Backup/02032009000500/fineos*
                ----      -----------        ---------- --- ----
   30,450,795,951  B  09/14/08   15:28:31    B30_30_TAP  A  /aetnaprod/backup/Backup/09132008010000/fullwkabprod.exp.09132008010000.Z
   
   #Restore this file to original location
   restore /aetnaprod/backup/ullwkabprod.exp.09132008010000.Z

6. Once file restored. Get ready 2 files.
   
   See example below:
   C:\Data\Misc\Restore_and_Recovery\restore_t_communication.par
   
   fromuser=wkab10
   touser=tmp_restore
   tables=(t_communication)
   indexes=N
   constraints=N
   grants=N
    
   C:\Data\Misc\Restore_and_Recovery\restore_t_communication.ksh

   #!/bin/ksh
   PIPE=/tmp/tmp.pipe
   rm /tmp/tmp.pipe
   mknod $PIPE p

   uncompress -c  09132008010000/fullwkabprod.exp.09132008010000.Z > $PIPE &

   imp parfile=restore_t_communication.par userid=system/no734s file=$PIPE log=restore_t_communication.log

7. FTP this files over to Server or modify existing on Server

   cd
   /aetnaprod/backup/Backup

8. Execute import job and monitor 

   cd  
   /aetnaprod/backup/Backup

   nohup ./restore_t_communication.ksh &   

9. Once table imported. Please not based on par file no INDEXES got imported
   Developers started to run Updates and it was very slow. So based on get_sql_by_hash output 2 indexes were created and speed up process


HASH_VALUE MODULE                                                           ACTION
---------- ---------------------------------------------------------------- --------------------------------------
 397841688 PL/SQL Developer                                                 SQL Window - remap_tickets.sql
 

        ID  PARENT_ID PLAN
---------- ---------- --------------------------------------------------------------------------------------------
         0            UPDATE STATEMENT  MODE=CHOOSE
         1          0   UPDATE
         2          1     HASH JOIN SEMI
         3          2       TABLE ACCESS BY INDEX ROWID (WKAB10.T_COMMUNICATION)  MODE=ANALYZED
         4          3         INDEX RANGE SCAN (WKAB10.T_COMMUNICATION_IDX01)  MODE=ANALYZED
         5          2       VIEW
         6          5         NESTED LOOPS
         7          6           INDEX RANGE SCAN (WKAB10.T_EMPLOYEE_IX6)  MODE=ANALYZED
         8          6           INDEX UNIQUE SCAN (WKAB10.PK_PERSON)  MODE=ANALYZED
         9          1     TABLE ACCESS FULL (TMP_RESTORE.T_COMMUNICATION)  MODE=ANALYZED
 
10 rows selected.
 
Access Predicates
 
        ID ACCESS_PREDICATES

---------- --------------------------------------------------------------------------------
         2 "SYS_ALIAS_1"."PERSON_ID"="VW_NSO_1"."PERSON_ID"
         4 "SYS_ALIAS_1"."LOCATOR"=:SYS_B_0
         7 "E"."COMPANY_ID"=:SYS_B_1
         8 "E"."PERSON_ID"="P"."PERSON_ID"
 
Filter Predicates
 
        ID FILTER_PREDICATES
---------- --------------------------------------------------------------------------------
         9 "TC"."COMMUNICATION_ID"=:B1




This indexes speed things up

CREATE INDEX SYSTEM.IDX1
    ON TMP_RESTORE.T_COMMUNICATION(LOCATOR,PERSON_ID,COMM_MODE_ID)
TABLESPACE WKAB_INDEX
LOGGING
PCTFREE 10
INITRANS 2
MAXTRANS 255
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCOMPRESS
/
CREATE INDEX WKAB10.IDX2
    ON TMP_RESTORE.T_COMMUNICATION(COMMUNICATION_ID)
TABLESPACE WKAB_INDEX
LOGGING
PCTFREE 10
INITRANS 2
MAXTRANS 255
STORAGE(BUFFER_POOL DEFAULT)
NOPARALLEL
NOCOMPRESS
/



