- name: Fetch ORACLE_HOME for DB
  become_user: "{{ oracle_user }}"
  become: true
  ansible.builtin.shell: set -o pipefail && grep ^$"{{ instance_name }}:" /etc/oratab | awk -F':' ' {print $2} '
  register: oh_result
  changed_when: "oh_result.rc == 0"

- name: Display oh_result.stdout
  ansible.builtin.debug:
    var: oh_result

- name: List oracle home for DB
  ansible.builtin.debug:
    msg: "  oracle home {{ oh_result.stdout }}"

- name: Set oracle_home value
  ansible.builtin.set_fact:
    oracle_home: "{{ oh_result.stdout_lines | first }}"

- name: Confirm oracle_home value
  ansible.builtin.debug:
    var: oracle_home

- name: Fetch GI home
  become_user: "{{ oracle_user }}"
  become: true
  ansible.builtin.shell: set -o pipefail && grep ^$"+ASM:" /etc/oratab | awk -F':' ' {print $2} '
  register: gi_home_result
  changed_when: "gi_home_result.rc == 0"

- name: Set variable grid_home
  ansible.builtin.set_fact:
    grid_home: "{{ gi_home_result.stdout }}"
