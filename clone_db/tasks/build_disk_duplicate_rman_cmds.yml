- name: Create required oracle db admin directories
  become_user: "{{ oracle_user }}"
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ oracle_user }}"
    group: "{{ oracle_install_group }}"
    mode: "0775"
  with_items:
    - "{{ dbms_directory }}/app/oracle/admin/rman"
    - "{{ dbms_directory }}/app/oracle/admin/sql"
    - "{{ admp_dest }}/{{ db_name }}/adump"

- name: Remove rman script
  become: true
  ansible.builtin.file:
    path: "{{ oracle_base }}/admin/{{ db_name }}/rman/duplicate_{{ db_name }}_from_{{ source_db_name }}.rman"
    state: absent

- name: Add run command to rman script
  become: true
  become_user: "{{ oracle_user }}"
  ansible.builtin.blockinfile:
    path: "{{ oracle_base }}/admin/{{ db_name }}/rman/duplicate_{{ db_name }}_from_{{ source_db_name }}.rman"
    block: |
      run {
    marker: ""
    create: true
    owner: "{{ oracle_user }}"
    group: "{{ osdba_group }}"
    mode: "0644"

- name: Add channel commands to rman script
  become: true
  ansible.builtin.blockinfile:
    path: "{{ oracle_base }}/admin/{{ db_name }}/rman/duplicate_{{ db_name }}_from_{{ source_db_name }}.rman"
    block: |
      ALLOCATE AUXILIARY CHANNEL a{{ item }} TYPE DISK;
    marker: ""
    create: true
    owner: "{{ oracle_user }}"
    group: "{{ osdba_group }}"
    mode: "0644"
  with_sequence: start=1 end="{{ rman_channel_count | int }}"
  tags:
    - rman_prep

- name: Add duplicate command to rman script
  become: true
  ansible.builtin.blockinfile:
    path: "{{ oracle_base }}/admin/{{ db_name }}/rman/duplicate_{{ source_db_name }}.rman"
    block: |
      duplicate target database for to {{ db_name }} backup location '{{ disk_backup_location }}'
      logfile
      GROUP 1 ('{{ redo1_dg }}','{{ redo2_dg }}') SIZE {{ log_size }}M,
      GROUP 2 ('{{ redo1_dg }}','{{ redo2_dg }}') SIZE {{ log_size }}M
      spfile
      set db_unique_name='{{ db_unique_name }}'
      set control_files='{{ redo1_dg }}','{{ redo2_dg }}','{{ data_dg }}'
      set log_archive_dest_1='location={{ archive_log_dg }}'
      set db_create_online_log_dest_1='{{ redo1_dg }}'
      set db_create_online_log_dest_2='{{ redo2_dg }}'
      set db_create_file_dest='{{ data_dg }}'
      set db_recovery_file_dest=' {{ fra_dg }}'
      set log_file_name_convert '{{ source_redo_log_groups.stdout_lines[0] }}','{{ redo1_dg }}',
      '{{ source_redo_log_groups.stdout_lines[1] }}','{{ redo2_dg }}'
      set db_file_name_convert '{{  source_data_dg_list.stdout_lines[0] }}','{{ data_dg }}'
      set local_listener='(DESCRIPTION=(ADDRESS=(PROTOCOL=IPC)(KEY={{ db_name }}_IPC)))'
      set audit_file_dest='{{ admp_dest }}/{{ db_name }}/adump'
      set diagnostic_dest='{{ oracle_base }}'
      set log_archive_dest_2=' '
      set log_archive_dest_3=' '
      set log_archive_dest_4=' '
      set log_archive_dest_5=' '
      set log_archive_dest_6=' '
      set sga_target='{{ sga_size }}'
      set sga_max_size='{{ sga_size }}'
      set "_disk_sector_size_override"='true'
      nofilenamecheck
      dorecover;
      }
    marker: ""
    create: true
    owner: "{{ oracle_user }}"
    group: "{{ osdba_group }}"
    mode: "0644"
  tags:
    - rman_prep
