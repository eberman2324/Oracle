- name: Fetch standby server hostname
  when: standby_count.stdout | int > 0
  become_user: "{{ oracle_user }}"
  become: true
  ansible.builtin.shell: |
    set -o pipefail && $ORACLE_HOME/bin/dgmgrl -echo / "show database {{ item }}  HostName" | grep 'HostName =' | awk -F"=" '{print $2}' | tr -d ' '
  register: standby_hostname
  changed_when: "standby_hostname.rc == 0"
  environment:
    ORACLE_HOME: "{{ oracle_home }}"
    ORACLE_SID: "{{ instance_name }}"

- name: List standby host name
  ansible.builtin.debug:
    msg: "standby hostname {{ standby_hostname }}"

- name: Add standby host name to standby server list
  when: standby_servers is defined
  ansible.builtin.set_fact:
    standby_servers: "{{ standby_servers + [standby_hostname.stdout] }}"

- name: Add initial standby hostname to server list
  when: standby_servers is undefined
  ansible.builtin.set_fact:
    standby_servers: "{{ [standby_hostname.stdout] }}"

- name: List standby servers
  ansible.builtin.debug:
    msg: "standby servers {{ standby_servers }}"
