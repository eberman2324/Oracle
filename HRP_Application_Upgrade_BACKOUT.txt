

Rollback databases prior to the beginning of the HRP Applicatin Upgrade


-- PY

Shutdown the Primary Database

  sqlplus / as sysdba

  sql => shutdown immediate;

  OR

  run => srvctl stop database -d HEPYPRD_xhepydbm21p -o immediate


Startup mount the Primary Database

  sqlplus / as sysdba

  sql => startup mount;

  OR

  run => srvctl start database -d HEPYPRD_xhepydbm21p -o mount


Flashback the Primary Database to the desired Restore Point:

  sqlplus / as sysdba

  sql => flashback database to restore point HEPYPRD_Primary_flashback_YYYYMMDD;


Open the primary database READ ONLY to confirm restore time

  sqlplus / as sysdba

  sql => alter database open read only;

  sql => select * from aedba.rman_heartbeat;

         Confirm restored to appropriate timeframe

DBNAME                      TIMESTMP
--------------------------- --------------------------


  
Open the primary database with RESETLOGS (if above restore time was correct)

  sqlplus / as sysdba

  sql => shutdown immediate;

  sql => startup mount;

  sql => alter database open resetlogs;


Flashback the Standby Database to the desired Restore Point: (Will need to mount the database if this is an ADG standby)

  sqlplus / as sysdba

  sql => flashback database to restore point HEPYPRD_Standby_flashback_YYYYMMDD;


-- double check Standby
alter database open read only;
SQL> select * from aedba.rman_heartbeat;

DBNAME                      TIMESTMP
--------------------------- --------------------------



  sqlplus / as sysdba

  sql => shutdown immediate;

  sql => startup mount;




Enable Log Transport Services to the Standby Database from the Primary server

  $SCRIPTS/ENable_log_shipping.sh HEPYPRD




Perform a Log Switch on Primary Database

  sqlplus / as sysdba

  sql => alter system switch logfile;

  sql => select group#,thread#,sequence# from v$log where status = 'CURRENT';

  Confirm log sent to standby server

  run => view $BDUMP/alert_HEPYPRD.log


Once Log Transport Services is running again, enable Managed Recovery on the Standby Database:


  dgmgrl
  
  connect /

 edit database 'HEPYPRD_xhepydbw21p' set state = 'APPLY-ON';

 show database verbose 'HEPYPRD_xhepydbw21p';


Verify the Standby Database is now following the Primary Database into the new Incarnation

   Run the following against the primary and standby databases

   sqlplus / as sysdba

   select incarnation# from V$DATABASE_INCARNATION where status = 'CURRENT';



Check BCT

 SELECT status, filename FROM V$BLOCK_CHANGE_TRACKING;

 May be needed
 ALTER DATABASE ENABLE BLOCK CHANGE TRACKING;


Drop restore points

  Primary:

    sqlplus / as sysdba

    sql => DROP RESTORE POINT HEPYPRD_Primary_flashback_YYYYMMDD;


    sql => select name,scn,time from v$restore_point where guarantee_flashback_database='YES';

           no rows selected

    sql => select flashback_on from v$database;

           FLASHBACK_ON
           ------------------
           NO

  Standby:

    sqlplus / as sysdba

    sql => DROP RESTORE POINT HEPYPRD_Standby_flashback_YYYYMMDD; 

    sql => select name,scn,time from v$restore_point where guarantee_flashback_database='YES';

           no rows selected

    sql => select flashback_on from v$database;

           FLASHBACK_ON
           ------------------
           NO



   

Resync RMAN catalog from primary server while connected to the primary database and catalog

rmanc
    rman => resync catalog;

            new incarnation of database registered in recovery catalog
            starting full resync of recovery catalog


Take an archivelog backup (Mimic prod OEM activity)

/orahome/u01/app/oracle/local/scripts/backup_archive_logs.sh HEPYPRD


Take a differential level 1 database backup (optional)

Resume OEM archivelog backup job BACKUP_HEPYPRD_XHEPYDBM21P_ARCHIVE_LOG for primary database

Resume OEM standby archive delete job HEPYPRD_STDBY2_ARCHIVE_LOG_PURGE for standby database

Uncomment heartbeat in cron on primary server

Uncomment PY stats job



--DW

Shutdown the Primary Database

  sqlplus / as sysdba

  sql => shutdown immediate;

  OR

  run => srvctl stop database -d HEDWPRD_xhedwdbm21p -o immediate


Startup mount the Primary Database

  sqlplus / as sysdba

  sql => startup mount;

  OR

  run => srvctl start database -d HEDWPRD_xhedwdbm21p -o mount


Flashback the Primary Database to the desired Restore Point:

  sqlplus / as sysdba

  sql => flashback database to restore point HEDWPRD_Primary_flashback_YYYYMMDD;


Open the primary database READ ONLY to confirm restore time

  sqlplus / as sysdba

  sql => alter database open read only;

  sql => select * from aedba.rman_heartbeat;

         Confirm restored to appropriate timeframe

DBNAME                      TIMESTMP
--------------------------- --------------------------


  
Open the primary database with RESETLOGS (if above restore time was correct)

  sqlplus / as sysdba

  sql => shutdown immediate;

  sql => startup mount;

  sql => alter database open resetlogs;


Flashback the Standby Database to the desired Restore Point: (Will need to mount the database if this is an ADG standby)

  sqlplus / as sysdba

  sql => flashback database to restore point HEDWPRD_Standby_flashback_YYYYMMDD;


-- double check Standby
alter database open read only;
SQL> select * from aedba.rman_heartbeat;

DBNAME                      TIMESTMP
--------------------------- --------------------------



  sqlplus / as sysdba

  sql => shutdown immediate;

  sql => startup mount;




Enable Log Transport Services to the Standby Database from the Primary server

  $SCRIPTS/ENable_log_shipping.sh HEDWPRD




Perform a Log Switch on Primary Database

  sqlplus / as sysdba

  sql => alter system switch logfile;

  sql => select group#,thread#,sequence# from v$log where status = 'CURRENT';

  Confirm log sent to standby server

  run => view $BDUMP/alert_HEDWPRD.log


Once Log Transport Services is running again, enable Managed Recovery on the Standby Database:


  dgmgrl
  
  connect /

 edit database 'HEDWPRD_xhedwdbw21p' set state = 'APPLY-ON';

 show database verbose 'HEDWPRD_xhedwdbw21p';


Verify the Standby Database is now following the Primary Database into the new Incarnation

   Run the following against the primary and standby databases

   sqlplus / as sysdba

   select incarnation# from V$DATABASE_INCARNATION where status = 'CURRENT';



Check BCT

 SELECT status, filename FROM V$BLOCK_CHANGE_TRACKING;

 May be needed
 ALTER DATABASE ENABLE BLOCK CHANGE TRACKING;


Drop restore points

  Primary:

    sqlplus / as sysdba

    sql => DROP RESTORE POINT HEDWPRD_Primary_flashback_YYYYMMDD;


    sql => select name,scn,time from v$restore_point where guarantee_flashback_database='YES';

           no rows selected

    sql => select flashback_on from v$database;

           FLASHBACK_ON
           ------------------
           NO

  Standby:

    sqlplus / as sysdba

    sql => DROP RESTORE POINT HEDWPRD_Standby_flashback_YYYYMMDD; 

    sql => select name,scn,time from v$restore_point where guarantee_flashback_database='YES';

           no rows selected

    sql => select flashback_on from v$database;

           FLASHBACK_ON
           ------------------
           NO



   

Resync RMAN catalog from primary server while connected to the primary database and catalog

rmanc
    rman => resync catalog;

            new incarnation of database registered in recovery catalog
            starting full resync of recovery catalog


Take an archivelog backup (Mimic prod OEM activity)

/orahome/u01/app/oracle/local/scripts/backup_archive_logs.sh HEDWPRD


Take a differential level 1 database backup (optional)

!! !! Run UNLOCKUSER procedure in HEDWPRD

!! Uncomment  DW stats crontab jobs

Resume OEM archivelog backup job BACKUP_HEDWPRD_XHEDWDBM21P_ARCHIVED_LOGS for primary database

Resume OEM standby archive delete job HEDWPRD_STDBY2_ARCHIVE_LOG_PURGE for standby database

Uncomment heartbeat in cron on primary server