
#################################################

https://docs.oracle.com/en/database/oracle/oracle-database/19/racad/converting-single-instance-oracle-databases-to-oracle-rac-and-oracle-rac-one-node.html#GUID-A4F1E90E-152C-4A18-9E34-2CA7AE14F10C




--> Open Standby on NodeA as read only

   srvctl modify database -d <DB_NAME_<CLUSTERNAME> -startoption "READ ONLY"
   srvctl stop database -d <DB_NAME_<CLUSTERNAME>
   srvctl start database -d <DB_NAME_<CLUSTERNAME>
   srvctl config database -d <DB_NAME_<CLUSTERNAME>


   srvctl modify database -d HEDWSTS_xhedwdbw2scl -startoption "READ ONLY"
   srvctl stop database -d HEDWSTS_xhedwdbw2scl
   srvctl start database -d HEDWSTS_xhedwdbw2scl
   srvctl config database -d HEDWSTS_xhedwdbw2scl



----> If your single-instance database was using automatic undo management, then create an undo tablespace for each additional instance using the CREATE UNDO TABLESPACE SQL statement.

From old Primary

create BIGFILE undo tablespace UNDOTBS2 datafile  '+DATA_01' size 72G;

From NodeA to make sure it mapped to +DATA1 on NodeA (Standby)

select FILE_NAME from DBA_DATA_FILES WHERE tablespace_name like '%UNDO%';




--> Create redo threads that have at least two redo logs for each additional instance. Enable the new redo threads by using an ALTER DATABASE SQL statement. Then, shut down the database instance.

##Redo log groups changes. Execute from  Primary 
                           Execute from NodeA 
SELECT group#, thread#, status, members FROM v$log;
SELECT * FROM v$logfile;

select TYPE FROM v$logfile;
REDOA_01
REDOB_01

On Primary 

Since we do not have space to accomade drop 3 groups first

ALTER DATABASE DROP LOGFILE GROUP 1
/
ALTER DATABASE DROP LOGFILE GROUP 2
/
ALTER DATABASE DROP LOGFILE GROUP 3
/


Only create 3 GROUPS because of space shortage.



ALTER DATABASE ADD LOGFILE thread 2 GROUP 1 ('+REDOA_01','+REDOB_01') SIZE 600M;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 2 ('+REDOA_01','+REDOB_01') SIZE 600M;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 3 ('+REDOA_01','+REDOB_01') SIZE 600M;

#ALTER DATABASE ADD LOGFILE thread 2 GROUP 4 ('+REDOA_01','+REDOB_01') SIZE 600M;
#ALTER DATABASE ADD LOGFILE thread 2 GROUP 5 ('+REDOA_01','+REDOB_01') SIZE 600M;
#ALTER DATABASE ADD LOGFILE thread 2 GROUP 6 ('+REDOA_01','+REDOB_01') SIZE 600M;

alter database enable public thread 2;




NodeA

##To prevent error below turn off Redo apply

ERROR at line 1:
ORA-01156: recovery or flashback in progress may need access to files

	Turn off log applied on Standby (NodeA)
	dgmgrl / 
	edit database '<DB_NAME_<CLUSTERNAME>' set state=apply-off;
        
        edit database 'HEDWSTS_xhedwdbw2scl' set state=apply-off;
         show database verbose 'HEDWSTS_xhedwdbw2scl';


## To prevent error below do following

ORA-01275: Operation ADD LOGFILE is not allowed if standby file management is automatic.

sqlplus / as sysdba
alter system set standby_file_management='MANUAL' scope=memory;
exit



# check what is already in place
SELECT group#, thread#, status, members FROM v$log;

GROUP#    THREAD# STATUS                                              MEMBERS
------ ---------- ------------------------------------------------ ----------
     1          1 UNUSED                                                    2
     2          1 UNUSED                                                    2
     3          1 UNUSED                                                    2
     4          1 UNUSED                                                    2
     5          1 UNUSED                                                    2
     6          1 UNUSED                                                    2
     7          2 UNUSED                                                    2
     8          2 UNUSED                                                    2



[SYS@HEDWSTS:HEDWSTS] SQL> SELECT group#, thread#, status, members FROM v$log;

    GROUP#    THREAD# STATUS                                              MEMBERS
---------- ---------- ------------------------------------------------ ----------
         1          2 UNUSED                                                    2
         2          2 UNUSED                                                    2
         3          2 UNUSED                                                    2

         4          1 UNUSED                                                    2
         5          1 UNUSED                                                    2
         6          1 UNUSED                                                    2



## if for some reason logs with Thread 2 already exist, drop them
ALTER DATABASE DROP LOGFILE GROUP 7
/
ALTER DATABASE DROP LOGFILE GROUP 8
/

# Add regular new logs
ALTER DATABASE ADD LOGFILE thread 2 GROUP 7 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 8 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 9 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 10 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 11 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 12 ('+REDO1','+REDO2') SIZE 600M;


# Add Standby logs
select GROUP#, THREAD# from V$STANDBY_LOG;



    GROUP#    THREAD#
---------- ----------
       101          1
       102          1
       103          1
       104          1
       105          1
       106          1
       107          1



ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 108 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 109 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 110 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 111 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 112 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 113 ('+REDO1','+REDO2') SIZE 600M;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 114 ('+REDO1','+REDO2') SIZE 600M;


Tried (may need to check if this needs to be done after switchover)

alter database enable public thread 2;

ERROR at line 1:
ORA-16000: database or pluggable database open for read-only access


## put this back to auto

alter system set standby_file_management='AUTO' scope=memory;

## turn ON Redo apply
dgmgrl / 



	edit database '<DB_NAME_<CLUSTERNAME>' set state=apply-on;
        
        edit database 'HEDWSTS_xhedwdbw2scl' set state=apply-on;
         show database verbose 'HEDWSTS_xhedwdbw2scl';


--> Shut down the database instance.

on NodeA


Stop Data Guard Apply:
Stop the redo apply on the standby database to halt data recovery.


From Primary 

	Suspend log shipping from Primary 
	cd $SCRIPTS
	./DISable_log_shipping.sh <DB_NAME>


NodeA
	Turn off log applied on Standby (NodeA)
	dgmgrl / 
	edit database '<DB_NAME_<CLUSTERNAME>' set state=apply-off;
	srvctl stop database -d '<DB_NAME_<CLUSTERNAME>'
       

--> If your single-instance database was using an SPFILE, then create a temporary parameter file (PFILE) from the SPFILE using the following SQL statement:

On NodeA




create pfile from spfile;


--Rename the SPFILE under $ORACLE_HOME/dbs location on both Nodes

cd $ORACLE_HOME/dbs
mv spfileHEDWSTS.ora spfileHEDWSTS.ora_B4_ASM

--Rename the PFILE under $ORACLE_HOME/dbs location on both Nodes
cp initHEDWSTS.ora  initHEDWSTS.ora_B4_ASM

## for reference
SELECT sys_context('USERENV','DB_NAME') as Instance from dual;
SELECT sys_context('USERENV','DB_NAME') AS Database_Name FROM dual;

!! just remove old database references entries.
!! No need to add new parameters
cd $DBS
vi initHEDWSTS.ora



shutdown immediate






## to make sure no errors/issues
startup pfile=/oradb/app/oracle/product/19.22.0/db_1/dbs/initHEDWSTS.ora;

create spfile='+CRSCONFIG' from PFILE='/oradb/app/oracle/product/19.22.0/db_1/dbs/initHEDWSTS.ora';

shutdown immediate

startup



show parameter spfile

spfile
+CRSCONFIG/HEDWSTS_XHEDWDBW2SCL/PARAMETERFILE/spfile.258.1172571733


srvctl config database -d HEDWSTS_xhedwdbw2scl
Bounce db










--> Copy the Oracle password file from the initial node, or from the node on which you are working, to the corresponding location on the additional nodes on which the cluster database will have an instance. Replace the ORACLE_SID name in each password file appropriately for each additional instance.

## have not done yet. Follow up
scp /oradb/app/oracle/product/19.22.0/db_1/dbs/orapwHEDWSTS xhedwdbw2bs:/oradb/app/oracle/product/19.22.0/db_1/dbs/orapwHEDWSTS



--> Set the REMOTE_LISTENER parameter to the single client access name (SCAN) and port.
Modify pfile

show parameter REMOTE_LISTENER

--> Configure the net service entries for the database and instances, and address entries for the LOCAL_LISTENER for each instance and for the REMOTE_LISTENER in the tnsnames.ora file, and copy the tnsnames.ora file to all nodes.

tnsnames.ora 



--> On the local node, use SQL*Plus to run catclust.sql. This script creates the dictionary views needed for Oracle RAC databases. For example:

### Can't run on Standby needs to be write/read mode. Run on Primary side instead
start ?/rdbms/admin/catclust.sql

######--> Add the configuration for the Oracle RAC or Oracle RAC One Node database and its instance-to-node mapping using SRVCTL.



--> To add the configuration of an Oracle RAC One Node database, use the following command:



 ps -ef| grep pmon


srvctl stop database -d HEDWSTS_xhedwdbw2scl
srvctl remove database -db HEDWSTS_xhedwdbw2scl


srvctl add database -dbname HEDWSTS -db HEDWSTS_xhedwdbw2scl -instance HEDWSTS -dbtype RACONENODE -server xhedwdbw2as,xhedwdbw2bs -oraclehome /oradb/app/oracle/product/19.22.0/db_1 -spfile '+CRSCONFIG/HEDWSTS_XHEDWDBW2SCL/PARAMETERFILE/spfile.258.1172571733'
srvctl start database -d HEDWSTS_xhedwdbw2scl
srvctl config database -d HEDWSTS_xhedwdbw2scl


## to make sure DBNAME_1 added by agent
## add DBNAME_2 as well
cat /etc/oratab

. oraenv
HEDWSTS_1

sqlplus / as sysdba
alter system set cluster_database=TRUE scope=spfile;
exit

srvctl stop database -d HEDWSTS_xhedwdbw2scl
srvctl start database -d HEDWSTS_xhedwdbw2scl



dgmgrl / 
show configuration
show database verbose 'HEDWSTS_xhedwdbw2scl'

!! if any errors may need to change DGConnectIdentifier 

edit database 'HEDWSTS_xhedwdbw2scl' set property DGConnectIdentifier = '(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=xhedwdbw2as)(PORT=1573))(CONNECT_DATA=(SID=HEDWSTS_1)))'


--> After starting the database with SRVCTL, your conversion process is complete. You can run the following SQL statement to see the status of all the instances in your Oracle RAC database:
SELECT * FROM v$active_instances;






###	Start Data Guard Apply:
	Restart the redo apply on the standby database to resume data recovery.

On Primary
./ENable_log_shipping.sh <DB_NAME>

Node A

13.	dgmgrl / 
14.	edit database '<DB_NAME_<CLUSTERNAME>' set state=apply-on;
15.	srvctl start database -d <DB_NAME_<CLUSTERNAME>


select name as DB_NAME, db_unique_name from v$database;
select instance_name from v$instance;


###########################################


---- MISC -----

Stop Data Guard Apply:
•	Stop the redo apply on the standby database to halt data recovery.


F. Add the configuration for the  Oracle RAC One Node database and its instance-to-node mapping using SRVCTL.



H. To add the configuration of an Oracle RAC One Node database, use the following command


12.	Start Data Guard Apply:
•	Restart the redo apply on the standby database to resume data recovery.


Final Verification
•	Ensure that the database starts correctly on both nodes by switching the instance:
sh
Copy code
srvctl relocate database -db orcl -node NodeB
•	Check the status:
sh
Copy code
srvctl status database -db orcl

SELECT group#, thread#, status, members FROM v$log;
SELECT * FROM v$logfile;

srvctl status listener
srvctl status database -d HEDWSTS_xhedwdbw2scl
srvctl config database -d HEDWSTS_xhedwdbw2scl



  
----  srvctl add database -dbname HEDWSTS -dbtype RACONENODE -oraclehome /oradb/app/oracle/product/19.22.0/db_1 -spfile '+CRSCONFIG/xhedwdbw2scl/HEDWSTSPARAMETERFILE/spfile.259.1172219827'
----PRKO-2127 : Either option '-server' or '-serverpool' must be supplied for adding RAC One Node database

---  srvctl add database -db HEDWSTS_xhedwdbw2scl -instance HEDWSTS -dbtype RACONENODE -server xhedwdbw2as,xhedwdbw2bs -oraclehome /oradb/app/oracle/product/19.22.0/db_1 -spfile '+CRSCONFIG/HEDWSTS_XHEDWDBW2SCL/PARAMETERFILE/spfile.258.1172571733'

--> Start the Oracle RAC or Oracle RAC One Node database using SRVCTL:

---srvctl modify database -db HEDWSTS_xhedwdbw2scl -spfile '+CRSCONFIG/HEDWSTS_XHEDWDBW2SCL/PARAMETERFILE/spfile.258.1172571733'

----*.cluster_database=true
----HEDWSTS.instance_number=1

HEDWSTS_1.undo_tablespace='UNDOTBS1'
HEDWSTS_2.undo_tablespace='UNDOTBS2'

 ALTER SYSTEM SET HEDWSTS_1.UNDO_TABLESPACE = 'UNDOTBS1' scope=spfile;
 ALTER SYSTEM SET HEDWSTS_2.UNDO_TABLESPACE = 'UNDOTBS2' scope=spfile; 

alter system set UNDO_TABLESPACE = 'UNDOTBS1' sid='HEDWSTS_1' scope=spfile;
alter system set UNDO_TABLESPACE = 'UNDOTBS2' sid='HEDWSTS_2' scope=spfile;
[SYS@HEDWSTS:HEDWSTS_2] SQL> alter system set UNDO_TABLESPACE = 'UNDOTBS1' sid='HEDWSTS_1' scope=spfile;

System altered.

[SYS@HEDWSTS:HEDWSTS_2] SQL> alter system set UNDO_TABLESPACE = 'UNDOTBS2' sid='HEDWSTS_2' scope=spfile;

System altered.


###*.cluster_database_instances=2
----ORA-32006: CLUSTER_DATABASE_INSTANCES initialization parameter has been deprecated
----https://docs.oracle.com/en/database/oracle/oracle-database/19/refrn/CLUSTER_DATABASE_INSTANCES.html

# Not sure if still need to do that. Follow up
#remove everything and add to init.ora
#spfile ='+CRSCONFIG/HEDWSTS_XHEDWDBW2SCL/PARAMETERFILE/spfile.257.1172153293'
@spfile='+CRSCONFIG/xhedwdbw2scl/HEDWSTSPARAMETERFILE/'


!! Relocate notes
ps -ef| grep pmon
srvctl relocate database -d HEDWSTS_xhedwdbw2scl -n xhedwdbw2bs
srvctl relocate database -d HEDWSTS_xhedwdbw2scl -n xhedwdbw2as

If  you kill pmon 2 times within short time it will automatically relocate to other node

-- listener registration notes

Login under grid
svrctl config scan_listener -all

*******************************

From Primary 

dgmgrl /
Connected to "HEPYSTS_xhepydbw21s"
Connected as SYSDG.

DGMGRL> show configuration;


Configuration - HEPYSTS

  Protection Mode: MaxPerformance
  Members:
  HEPYSTS_xhepydbw21s  - Primary database
    Error: ORA-16778: redo transport error for one or more members

    HEPYSTS_xhepydbw2scl - Physical standby database
      Error: ORA-1034: ORACLE not available

Fast-Start Failover:  Disabled

Configuration Status:
ERROR   (status updated 47 seconds ago)
DGMGRL> disable database 'HEPYSTS_xhepydbw2scl';
Disabled.
DGMGRL>

From NodeA

[SYS@HEDWSTS:HEPYSTS_1] SQL> alter system set dg_broker_start=false;

System altered.

[SYS@HEDWSTS:HEPYSTS_1] SQL> alter system set dg_broker_config_file1 = '+DATA1/HEPYSTS_XHEPYDBW2SCL/DATAGUARDCONFIG/dr1HEPYSTS_xhepydbw2scl.dat' sid='*';


System altered.

[SYS@HEDWSTS:HEPYSTS_1] SQL> alter system set dg_broker_config_file2 = '+DATA1/HEPYSTS_XHEPYDBW2SCL/DATAGUARDCONFIG/dr2HEPYSTS_xhepydbw2scl.dat' sid='*';


System altered.

[SYS@HEDWSTS:HEPYSTS_1] SQL> alter system set dg_broker_start=true;

System altered.

[SYS@HEDWSTS:HEDWSTS_1] SQL>



From Primary

dgmgrl /
Connected to "HEPYSTS_xhepydbw21s"
Connected as SYSDG.

DGMGRL> show configuration;


Configuration - HEPYSTS

  Protection Mode: MaxPerformance
  Members:
  HEPYSTS_xhepydbw21s  - Primary database
    Error: ORA-16778: redo transport error for one or more members

    HEPYSTS_xhepydbw2scl - Physical standby database
      Error: ORA-1034: ORACLE not available

Fast-Start Failover:  Disabled
Configuration Status:
SUCCESS   (status updated 46 seconds ago)

DGMGRL> enable database 'HEPYSTS_xhepydbw2scl';
Enabled.
DGMGRL>




history | grep srvctl

  391  26/06/24 15:36:56 srvctl modify database -h
  392  26/06/24 15:37:33 srvctl modify database -d HEDWSTS_xhedwdbw2scl -role PHYSICAL_STANDBY
  393  26/06/24 15:38:09 srvctl modify database -d HEDWSTS_xhedwdbw2scl -startoption "READ ONLY";


srvctl config database -d HEPYSTS_xhepydbw2scl
srvctl modify database -d HEPYSTS_xhepydbw2scl -role PHYSICAL_STANDBY
srvctl modify database -d HEPYSTS_xhepydbw2scl -startoption "READ ONLY";
srvctl stop database -d HEPYSTS_xhepydbw2scl
srvctl start database -d HEPYSTS_xhepydbw2scl




Add to sqlnet.ora on both Node A and Node B

NAMES.DIRECTORY_PATH= (LDAP, TNSNAMES, EZCONNECT)




***** PROD steps ******

HEPYPRD (M)

Create redo threads 2
From Primary
select GROUP#,THREAD#,BYTES/1024/1024 from v$log;
GROUP#	THREAD#	BYTES/1024/1024
1	1	6144
2	1	6144
3	1	6144
4	1	6144
5	1	6144
6	1	6144

SELECT group#, type, member FROM v$logfile order by group#;

GROUP#	TYPE	MEMBER
1	ONLINE	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_1.269.1113729929
1	ONLINE	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_1.268.1113729933
2	ONLINE	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_2.269.1113729849
2	ONLINE	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_2.268.1113729845
3	ONLINE	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_3.267.1113729841
3	ONLINE	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_3.267.1113729837
4	ONLINE	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_4.266.1113729941
4	ONLINE	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_4.266.1113729937
5	ONLINE	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_5.265.1113729945
5	ONLINE	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_5.265.1113729949
6	ONLINE	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_6.264.1113729953
6	ONLINE	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_6.264.1113729957
11	STANDBY	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_11.256.1115599113
11	STANDBY	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_11.256.1115599119
12	STANDBY	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_12.262.1115599127
12	STANDBY	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_12.262.1115599131
13	STANDBY	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_13.261.1115599143
13	STANDBY	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_13.261.1115599137
14	STANDBY	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_14.259.1115599149
14	STANDBY	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_14.259.1115599157
15	STANDBY	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_15.258.1115599173
15	STANDBY	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_15.260.1115599167
16	STANDBY	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_16.260.1115599185
16	STANDBY	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_16.258.1115599179
17	STANDBY	+REDOB_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_17.270.1115599199
17	STANDBY	+REDOA_01/HEPYPRD_XHEPYDBM1P/ONLINELOG/group_17.270.1115599193


select GROUP#,THREAD# ,BYTES/1024/1024, status from v$standby_log;

GROUP#	THREAD#	BYTES/1024/1024	STATUS
11	1	6144		UNASSIGNED
12	1	6144		UNASSIGNED
13	1	6144		UNASSIGNED
14	1	6144		UNASSIGNED
15	1	6144		UNASSIGNED
16	1	6144		UNASSIGNED
17	1	6144		UNASSIGNED

 Total_MB  Free_MB
   163840    83757
   163840    83757


ALTER DATABASE ADD LOGFILE thread 2 GROUP 7 ('+REDOA_01','+REDOB_01') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 8 ('+REDOA_01','+REDOB_01') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 9 ('+REDOA_01','+REDOB_01') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 10 ('+REDOA_01','+REDOB_01') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 18 ('+REDOA_01','+REDOB_01') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 19 ('+REDOA_01','+REDOB_01') SIZE 6144M BLOCKSIZE 4096;

alter database enable public thread 2;


From Standby(NodeA)

##To prevent error below turn off Redo apply

ERROR at line 1:
ORA-01156: recovery or flashback in progress may need access to files

	Turn off log applied on Standby (NodeA)
       
       HEPYPRD (M)  example:
dgmgrl / 
edit database 'HEPYPRD_xhepydbm2pcl' set state=apply-off;
show database verbose 'HEPYPRD_xhepydbm2pcl';

## To prevent error below do following

ORA-01275: Operation ADD LOGFILE is not allowed if standby file management is automatic.

sqlplus / as sysdba
alter system set standby_file_management='MANUAL' scope=memory;
exit


# check what is already in place
SELECT group#, thread#, status, members FROM v$log order by group#,THREAD#  ;


    GROUP#    THREAD# STATUS                                              MEMBERS
---------- ---------- ------------------------------------------------ ----------
         1          1 UNUSED                                                    2
         2          1 UNUSED                                                    2
         3          1 UNUSED                                                    2
         4          1 UNUSED                                                    2
         5          1 UNUSED                                                    2
         6          1 UNUSED                                                    2

## if for some reason logs with Thread 2 already exist, drop them

# Add regular new logs


ALTER DATABASE ADD LOGFILE thread 2 GROUP 7 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 8 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 9 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 10 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 18 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD LOGFILE thread 2 GROUP 19 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;

# Add Standby logs

select GROUP#,THREAD# ,BYTES/1024/1024, status from v$standby_log;

    GROUP#    THREAD# BYTES/1024/1024 STATUS
---------- ---------- --------------- ------------------------------
        11          1            6144 UNASSIGNED
        12          1            6144 ACTIVE
        13          1            6144 UNASSIGNED
        14          1            6144 UNASSIGNED
        15          1            6144 UNASSIGNED
        16          1            6144 UNASSIGNED
        17          1            6144 UNASSIGNED



ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 20 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 21 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 22 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 23 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 24 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 25 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;
ALTER DATABASE ADD STANDBY LOGFILE thread 2 GROUP 26 ('+REDO1','+REDO2') SIZE 6144M BLOCKSIZE 4096;

## put this back to auto
sqlplus / as sysdba
alter system set standby_file_management='AUTO' scope=memory;
exit
## turn ON Redo apply
  
dgmgrl / 
   edit database 'HEPYPRD_xhepydbm2pcl' set state=apply-on;
         show database verbose 'HEPYPRD_xhepydbm2pcl';




